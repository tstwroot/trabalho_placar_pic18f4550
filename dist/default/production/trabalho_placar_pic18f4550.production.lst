

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Nov 09 15:55:55 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000000                     _TRISBbits	set	3987
    61   000000                     _PORTBbits	set	3969
    62   000000                     _PORTD	set	3971
    63   000000                     _TRISB	set	3987
    64   000000                     _TRISD	set	3989
    65   000000                     _PORTEbits	set	3972
    66   000000                     _TRISE	set	3990
    67                           
    68                           	psect	smallconst
    69   000800                     __psmallconst:
    70                           	callstack 0
    71   000800  00                 	db	0
    72   000801                     STR_2:
    73   000801  63                 	db	99	;'c'
    74   000802  61                 	db	97	;'a'
    75   000803  73                 	db	115	;'s'
    76   000804  61                 	db	97	;'a'
    77   000805  20                 	db	32
    78   000806  76                 	db	118	;'v'
    79   000807  65                 	db	101	;'e'
    80   000808  6E                 	db	110	;'n'
    81   000809  63                 	db	99	;'c'
    82   00080A  65                 	db	101	;'e'
    83   00080B  64                 	db	100	;'d'
    84   00080C  6F                 	db	111	;'o'
    85   00080D  72                 	db	114	;'r'
    86   00080E  00                 	db	0
    87   00080F                     STR_3:
    88   00080F  61                 	db	97	;'a'
    89   000810  70                 	db	112	;'p'
    90   000811  65                 	db	101	;'e'
    91   000812  72                 	db	114	;'r'
    92   000813  74                 	db	116	;'t'
    93   000814  65                 	db	101	;'e'
    94   000815  69                 	db	105	;'i'
    95   000816  20                 	db	32
    96   000817  72                 	db	114	;'r'
    97   000818  62                 	db	98	;'b'
    98   000819  32                 	db	50	;'2'
    99   00081A  20                 	db	32
   100   00081B  00                 	db	0
   101   00081C                     STR_1:
   102   00081C  43                 	db	67	;'C'
   103   00081D  41                 	db	65	;'A'
   104   00081E  53                 	db	83	;'S'
   105   00081F  41                 	db	65	;'A'
   106   000820  3A                 	db	58	;':'
   107   000821  20                 	db	32
   108   000822  00                 	db	0
   109   000823  00                 	db	0	; dummy byte at the end
   110   000000                     
   111                           ; #config settings
   112                           
   113                           	psect	cinit
   114   000A44                     __pcinit:
   115                           	callstack 0
   116   000A44                     start_initialization:
   117                           	callstack 0
   118   000A44                     __initialization:
   119                           	callstack 0
   120                           
   121                           ; Clear objects allocated to COMRAM (65 bytes)
   122   000A44  EE00  F001         	lfsr	0,__pbssCOMRAM
   123   000A48  0E41               	movlw	65
   124   000A4A                     clear_0:
   125   000A4A  6AEE               	clrf	postinc0,c
   126   000A4C  06E8               	decf	wreg,f,c
   127   000A4E  E1FD               	bnz	clear_0
   128   000A50                     end_of_initialization:
   129                           	callstack 0
   130   000A50                     __end_of__initialization:
   131                           	callstack 0
   132   000A50  0E00               	movlw	low (__Lmediumconst shr (0+16))
   133   000A52  6EF8               	movwf	tblptru,c
   134   000A54  0100               	movlb	0
   135   000A56  EF12  F004         	goto	_main	;jump to C main() function
   136                           
   137                           	psect	bssCOMRAM
   138   000001                     __pbssCOMRAM:
   139                           	callstack 0
   140   000001                     _funcs:
   141                           	callstack 0
   142   000001                     	ds	64
   143   000041                     _count:
   144                           	callstack 0
   145   000041                     	ds	1
   146                           
   147                           	psect	cstackCOMRAM
   148   000042                     __pcstackCOMRAM:
   149                           	callstack 0
   150   000042                     lcd_wr@val:
   151                           	callstack 0
   152   000042                     atraso_ms@valor:
   153                           	callstack 0
   154   000042                     __Exit@ec:
   155                           	callstack 0
   156                           
   157                           ; 2 bytes @ 0x0
   158   000042                     	ds	2
   159   000044                     atraso_ms@i:
   160                           	callstack 0
   161   000044                     exit@code:
   162                           	callstack 0
   163                           
   164                           ; 2 bytes @ 0x2
   165   000044                     	ds	2
   166   000046                     atraso_ms@j:
   167                           	callstack 0
   168                           
   169                           ; 1 bytes @ 0x4
   170   000046                     	ds	1
   171   000047                     lcd_cmd@val:
   172                           	callstack 0
   173   000047                     lcd_dat@val:
   174                           	callstack 0
   175                           
   176                           ; 1 bytes @ 0x5
   177   000047                     	ds	1
   178   000048                     lcd_str@str:
   179                           	callstack 0
   180   000048                     lcd_numb@str:
   181                           	callstack 0
   182                           
   183                           ; 2 bytes @ 0x6
   184   000048                     	ds	2
   185   00004A                     ??_lcd_str:
   186   00004A                     
   187                           ; 1 bytes @ 0x8
   188   00004A                     	ds	2
   189   00004C                     lcd_str@i:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0xA
   193   00004C                     	ds	1
   194   00004D                     main@casa:
   195                           	callstack 0
   196                           
   197                           ; 2 bytes @ 0xB
   198   00004D                     	ds	2
   199                           
   200 ;;
   201 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   202 ;;
   203 ;; *************** function _main *****************
   204 ;; Defined at:
   205 ;;		line 19 in file "newmain.c"
   206 ;; Parameters:    Size  Location     Type
   207 ;;		None
   208 ;; Auto vars:     Size  Location     Type
   209 ;;  casa_           3    0        PTR unsigned char 
   210 ;;  casa            2   11[COMRAM] int 
   211 ;;  visitante       2    0        int 
   212 ;;  visitante_      2    0        PTR unsigned char 
   213 ;; Return value:  Size  Location     Type
   214 ;;                  2   84[None  ] int 
   215 ;; Registers used:
   216 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   217 ;; Tracked objects:
   218 ;;		On entry : 0/0
   219 ;;		On exit  : 0/0
   220 ;;		Unchanged: 0/0
   221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   222 ;;      Params:         0       0       0       0       0       0       0       0       0
   223 ;;      Locals:         2       0       0       0       0       0       0       0       0
   224 ;;      Temps:          0       0       0       0       0       0       0       0       0
   225 ;;      Totals:         2       0       0       0       0       0       0       0       0
   226 ;;Total ram usage:        2 bytes
   227 ;; Hardware stack levels required when called: 3
   228 ;; This function calls:
   229 ;;		_exit
   230 ;;		_lcd_cmd
   231 ;;		_lcd_init
   232 ;;		_lcd_numb
   233 ;;		_lcd_str
   234 ;; This function is called by:
   235 ;;		Startup code after reset
   236 ;; This function uses a non-reentrant model
   237 ;;
   238                           
   239                           	psect	text0
   240   000824                     __ptext0:
   241                           	callstack 0
   242   000824                     _main:
   243                           	callstack 28
   244   000824                     
   245                           ;newmain.c: 21:     TRISD = 0x00;
   246   000824  0E00               	movlw	0
   247   000826  6E95               	movwf	149,c	;volatile
   248                           
   249                           ;newmain.c: 22:     TRISB = 0x00;
   250   000828  0E00               	movlw	0
   251   00082A  6E93               	movwf	147,c	;volatile
   252                           
   253                           ;newmain.c: 23:     TRISE = 0x00;
   254   00082C  0E00               	movlw	0
   255   00082E  6E96               	movwf	150,c	;volatile
   256   000830                     
   257                           ;newmain.c: 25:     TRISBbits.TRISB1 = 1;
   258   000830  8293               	bsf	147,1,c	;volatile
   259   000832                     
   260                           ;newmain.c: 26:     TRISBbits.TRISB2 = 1;
   261   000832  8493               	bsf	147,2,c	;volatile
   262                           
   263                           ;newmain.c: 31:     int casa = 0, visitante = 0;
   264   000834  0E00               	movlw	0
   265   000836  6E4E               	movwf	(main@casa+1)^0,c
   266   000838  0E00               	movlw	0
   267   00083A  6E4D               	movwf	main@casa^0,c
   268   00083C                     
   269                           ;newmain.c: 34:     char *casa_, *visitante_;;newmain.c: 36:     lcd_init();
   270   00083C  EC70  F004         	call	_lcd_init	;wreg free
   271   000840                     
   272                           ;newmain.c: 37:     lcd_cmd(0x01);
   273   000840  0E01               	movlw	1
   274   000842  ECFF  F004         	call	_lcd_cmd
   275   000846                     l988:
   276                           
   277                           ;newmain.c: 40:     {;newmain.c: 42:         if(PORTBbits.RB1 == 0)
   278   000846  B281               	btfsc	129,1,c	;volatile
   279   000848  EF28  F004         	goto	u111
   280   00084C  EF2A  F004         	goto	u110
   281   000850                     u111:
   282   000850  EF5C  F004         	goto	l1010
   283   000854                     u110:
   284   000854                     
   285                           ;newmain.c: 43:         {;newmain.c: 44:             if(casa != 9)
   286   000854  0E09               	movlw	9
   287   000856  184D               	xorwf	main@casa^0,w,c
   288   000858  104E               	iorwf	(main@casa+1)^0,w,c
   289   00085A  B4D8               	btfsc	status,2,c
   290   00085C  EF32  F004         	goto	u121
   291   000860  EF34  F004         	goto	u120
   292   000864                     u121:
   293   000864  EF4D  F004         	goto	l1004
   294   000868                     u120:
   295   000868                     
   296                           ;newmain.c: 48:                 *visitante_ = visitante+48;
   297   000868  4A4D               	infsnz	main@casa^0,f,c
   298   00086A  2A4E               	incf	(main@casa+1)^0,f,c
   299   00086C                     
   300                           ;newmain.c: 50:                 lcd_cmd(0x01);
   301   00086C  0E01               	movlw	1
   302   00086E  ECFF  F004         	call	_lcd_cmd
   303   000872                     
   304                           ;newmain.c: 51:                 lcd_cmd(0x80);
   305   000872  0E80               	movlw	128
   306   000874  ECFF  F004         	call	_lcd_cmd
   307   000878                     
   308                           ;newmain.c: 53:                 lcd_str("CASA: ");
   309   000878  0E1C               	movlw	low STR_1
   310   00087A  6E48               	movwf	lcd_str@str^0,c
   311   00087C  0E08               	movlw	high STR_1
   312   00087E  6E49               	movwf	(lcd_str@str+1)^0,c
   313   000880  EC9E  F004         	call	_lcd_str	;wreg free
   314   000884                     
   315                           ;newmain.c: 54:                 lcd_cmd(0x86);
   316   000884  0E86               	movlw	134
   317   000886  ECFF  F004         	call	_lcd_cmd
   318   00088A                     
   319                           ;newmain.c: 55:                 lcd_numb(casa);
   320   00088A  C04D  F048         	movff	main@casa,lcd_numb@str
   321   00088E  C04E  F049         	movff	main@casa+1,lcd_numb@str+1
   322   000892  EC36  F005         	call	_lcd_numb	;wreg free
   323                           
   324                           ;newmain.c: 62:             }else
   325   000896  EF5C  F004         	goto	l1010
   326   00089A                     l1004:
   327                           
   328                           ;newmain.c: 63:             {;newmain.c: 64:                 lcd_cmd(0x01);
   329   00089A  0E01               	movlw	1
   330   00089C  ECFF  F004         	call	_lcd_cmd
   331   0008A0                     
   332                           ;newmain.c: 65:                 lcd_str("casa vencedor");
   333   0008A0  0E01               	movlw	low STR_2
   334   0008A2  6E48               	movwf	lcd_str@str^0,c
   335   0008A4  0E08               	movlw	high STR_2
   336   0008A6  6E49               	movwf	(lcd_str@str+1)^0,c
   337   0008A8  EC9E  F004         	call	_lcd_str	;wreg free
   338   0008AC                     
   339                           ;newmain.c: 66:                 exit(0);
   340   0008AC  0E00               	movlw	0
   341   0008AE  6E45               	movwf	(exit@code+1)^0,c
   342   0008B0  0E00               	movlw	0
   343   0008B2  6E44               	movwf	exit@code^0,c
   344   0008B4  EC2D  F005         	call	_exit	;wreg free
   345   0008B8                     l1010:
   346                           
   347                           ;newmain.c: 70:         if(PORTBbits.RB2 == 0)
   348   0008B8  B481               	btfsc	129,2,c	;volatile
   349   0008BA  EF61  F004         	goto	u131
   350   0008BE  EF63  F004         	goto	u130
   351   0008C2                     u131:
   352   0008C2  EF23  F004         	goto	l988
   353   0008C6                     u130:
   354   0008C6                     
   355                           ;newmain.c: 71:         {;newmain.c: 72:             lcd_str("apertei rb2 ");
   356   0008C6  0E0F               	movlw	low STR_3
   357   0008C8  6E48               	movwf	lcd_str@str^0,c
   358   0008CA  0E08               	movlw	high STR_3
   359   0008CC  6E49               	movwf	(lcd_str@str+1)^0,c
   360   0008CE  EC9E  F004         	call	_lcd_str	;wreg free
   361   0008D2                     
   362                           ;newmain.c: 73:             lcd_cmd(0x01);
   363   0008D2  0E01               	movlw	1
   364   0008D4  ECFF  F004         	call	_lcd_cmd
   365   0008D8  EF23  F004         	goto	l988
   366   0008DC  EF00  F000         	goto	start
   367   0008E0                     __end_of_main:
   368                           	callstack 0
   369                           
   370 ;; *************** function _lcd_str *****************
   371 ;; Defined at:
   372 ;;		line 78 in file "lcd.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;  str             2    6[COMRAM] PTR const unsigned char 
   375 ;;		 -> STR_3(13), STR_2(14), STR_1(7), 
   376 ;; Auto vars:     Size  Location     Type
   377 ;;  i               1   10[COMRAM] unsigned char 
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   387 ;;      Params:         2       0       0       0       0       0       0       0       0
   388 ;;      Locals:         1       0       0       0       0       0       0       0       0
   389 ;;      Temps:          2       0       0       0       0       0       0       0       0
   390 ;;      Totals:         5       0       0       0       0       0       0       0       0
   391 ;;Total ram usage:        5 bytes
   392 ;; Hardware stack levels used: 1
   393 ;; Hardware stack levels required when called: 2
   394 ;; This function calls:
   395 ;;		_lcd_dat
   396 ;; This function is called by:
   397 ;;		_main
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           	psect	text1
   402   00093C                     __ptext1:
   403                           	callstack 0
   404   00093C                     _lcd_str:
   405                           	callstack 28
   406   00093C                     
   407                           ;lcd.c: 78: void lcd_str(const char* str);lcd.c: 79: {;lcd.c: 80:  unsigned char i=0;
   408   00093C  0E00               	movlw	0
   409   00093E  6E4C               	movwf	lcd_str@i^0,c
   410                           
   411                           ;lcd.c: 82:  while(str[i] != 0 )
   412   000940  EFB1  F004         	goto	l970
   413   000944                     l966:
   414                           
   415                           ;lcd.c: 83:  {;lcd.c: 84:    lcd_dat(str[i]);
   416   000944  504C               	movf	lcd_str@i^0,w,c
   417   000946  2448               	addwf	lcd_str@str^0,w,c
   418   000948  6E4A               	movwf	??_lcd_str^0,c
   419   00094A  0E00               	movlw	0
   420   00094C  2049               	addwfc	(lcd_str@str+1)^0,w,c
   421   00094E  6E4B               	movwf	(??_lcd_str+1)^0,c
   422   000950  C04A  FFF6         	movff	??_lcd_str,tblptrl
   423   000954  C04B  FFF7         	movff	??_lcd_str+1,tblptrh
   424   000958                     	if	0	;tblptru may be non-zero
   425   000958                     	endif
   426   000958                     	if	0	;tblptru may be non-zero
   427   000958                     	endif
   428   000958  0008               	tblrd		*
   429   00095A  50F5               	movf	tablat,w,c
   430   00095C  ECEA  F004         	call	_lcd_dat
   431   000960                     
   432                           ;lcd.c: 85:    i++;
   433   000960  2A4C               	incf	lcd_str@i^0,f,c
   434   000962                     l970:
   435                           
   436                           ;lcd.c: 82:  while(str[i] != 0 )
   437   000962  504C               	movf	lcd_str@i^0,w,c
   438   000964  2448               	addwf	lcd_str@str^0,w,c
   439   000966  6E4A               	movwf	??_lcd_str^0,c
   440   000968  0E00               	movlw	0
   441   00096A  2049               	addwfc	(lcd_str@str+1)^0,w,c
   442   00096C  6E4B               	movwf	(??_lcd_str+1)^0,c
   443   00096E  C04A  FFF6         	movff	??_lcd_str,tblptrl
   444   000972  C04B  FFF7         	movff	??_lcd_str+1,tblptrh
   445   000976                     	if	0	;tblptru may be non-zero
   446   000976                     	endif
   447   000976                     	if	0	;tblptru may be non-zero
   448   000976                     	endif
   449   000976  0008               	tblrd		*
   450   000978  50F5               	movf	tablat,w,c
   451   00097A  0900               	iorlw	0
   452   00097C  A4D8               	btfss	status,2,c
   453   00097E  EFC3  F004         	goto	u101
   454   000982  EFC5  F004         	goto	u100
   455   000986                     u101:
   456   000986  EFA2  F004         	goto	l966
   457   00098A                     u100:
   458   00098A  0012               	return		;funcret
   459   00098C                     __end_of_lcd_str:
   460                           	callstack 0
   461                           
   462 ;; *************** function _lcd_numb *****************
   463 ;; Defined at:
   464 ;;		line 89 in file "lcd.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;  str             2    6[COMRAM] const int 
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      void 
   471 ;; Registers used:
   472 ;;		wreg, status,2, status,0, cstack
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   478 ;;      Params:         2       0       0       0       0       0       0       0       0
   479 ;;      Locals:         0       0       0       0       0       0       0       0       0
   480 ;;      Temps:          0       0       0       0       0       0       0       0       0
   481 ;;      Totals:         2       0       0       0       0       0       0       0       0
   482 ;;Total ram usage:        2 bytes
   483 ;; Hardware stack levels used: 1
   484 ;; Hardware stack levels required when called: 2
   485 ;; This function calls:
   486 ;;		_lcd_dat
   487 ;; This function is called by:
   488 ;;		_main
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           	psect	text2
   493   000A6C                     __ptext2:
   494                           	callstack 0
   495   000A6C                     _lcd_numb:
   496                           	callstack 28
   497   000A6C                     
   498                           ;lcd.c: 92:     lcd_dat(str);
   499   000A6C  5048               	movf	lcd_numb@str^0,w,c
   500   000A6E  ECEA  F004         	call	_lcd_dat
   501   000A72  0012               	return		;funcret
   502   000A74                     __end_of_lcd_numb:
   503                           	callstack 0
   504                           
   505 ;; *************** function _lcd_dat *****************
   506 ;; Defined at:
   507 ;;		line 48 in file "lcd.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;  val             1    wreg     unsigned char 
   510 ;; Auto vars:     Size  Location     Type
   511 ;;  val             1    5[COMRAM] unsigned char 
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg, status,2, status,0, cstack
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   521 ;;      Params:         0       0       0       0       0       0       0       0       0
   522 ;;      Locals:         1       0       0       0       0       0       0       0       0
   523 ;;      Temps:          0       0       0       0       0       0       0       0       0
   524 ;;      Totals:         1       0       0       0       0       0       0       0       0
   525 ;;Total ram usage:        1 bytes
   526 ;; Hardware stack levels used: 1
   527 ;; Hardware stack levels required when called: 1
   528 ;; This function calls:
   529 ;;		_atraso_ms
   530 ;;		_lcd_wr
   531 ;; This function is called by:
   532 ;;		_lcd_str
   533 ;;		_lcd_numb
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text3
   538   0009D4                     __ptext3:
   539                           	callstack 0
   540   0009D4                     _lcd_dat:
   541                           	callstack 28
   542                           
   543                           ;incstack = 0
   544                           ;lcd_dat@val stored from wreg
   545   0009D4  6E47               	movwf	lcd_dat@val^0,c
   546   0009D6                     
   547                           ;lcd.c: 48: void lcd_dat(unsigned char val);lcd.c: 49: {;lcd.c: 50:  PORTEbits.RE1=1;
   548   0009D6  8284               	bsf	132,1,c	;volatile
   549   0009D8                     
   550                           ;lcd.c: 51:         lcd_wr(val);
   551   0009D8  5047               	movf	lcd_dat@val^0,w,c
   552   0009DA  EC3A  F005         	call	_lcd_wr
   553   0009DE                     
   554                           ;lcd.c: 52:         PORTEbits.RE0=1;
   555   0009DE  8084               	bsf	132,0,c	;volatile
   556   0009E0                     
   557                           ;lcd.c: 53:         atraso_ms(3);
   558   0009E0  0E00               	movlw	0
   559   0009E2  6E43               	movwf	(atraso_ms@valor+1)^0,c
   560   0009E4  0E03               	movlw	3
   561   0009E6  6E42               	movwf	atraso_ms@valor^0,c
   562   0009E8  ECC6  F004         	call	_atraso_ms	;wreg free
   563   0009EC                     
   564                           ;lcd.c: 54:         PORTEbits.RE1=0;
   565   0009EC  9284               	bcf	132,1,c	;volatile
   566   0009EE                     
   567                           ;lcd.c: 55:         atraso_ms(3);
   568   0009EE  0E00               	movlw	0
   569   0009F0  6E43               	movwf	(atraso_ms@valor+1)^0,c
   570   0009F2  0E03               	movlw	3
   571   0009F4  6E42               	movwf	atraso_ms@valor^0,c
   572   0009F6  ECC6  F004         	call	_atraso_ms	;wreg free
   573   0009FA                     
   574                           ;lcd.c: 56:  PORTEbits.RE1=1;
   575   0009FA  8284               	bsf	132,1,c	;volatile
   576   0009FC  0012               	return		;funcret
   577   0009FE                     __end_of_lcd_dat:
   578                           	callstack 0
   579                           
   580 ;; *************** function _lcd_init *****************
   581 ;; Defined at:
   582 ;;		line 59 in file "lcd.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   596 ;;      Params:         0       0       0       0       0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0       0       0       0       0
   599 ;;      Totals:         0       0       0       0       0       0       0       0       0
   600 ;;Total ram usage:        0 bytes
   601 ;; Hardware stack levels used: 1
   602 ;; Hardware stack levels required when called: 2
   603 ;; This function calls:
   604 ;;		_atraso_ms
   605 ;;		_lcd_cmd
   606 ;; This function is called by:
   607 ;;		_main
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text4
   612   0008E0                     __ptext4:
   613                           	callstack 0
   614   0008E0                     _lcd_init:
   615                           	callstack 28
   616   0008E0                     
   617                           ;lcd.c: 61:  PORTEbits.RE1=0;
   618   0008E0  9284               	bcf	132,1,c	;volatile
   619                           
   620                           ;lcd.c: 62:  PORTEbits.RE0=0;
   621   0008E2  9084               	bcf	132,0,c	;volatile
   622   0008E4                     
   623                           ;lcd.c: 63:  atraso_ms(20);
   624   0008E4  0E00               	movlw	0
   625   0008E6  6E43               	movwf	(atraso_ms@valor+1)^0,c
   626   0008E8  0E14               	movlw	20
   627   0008EA  6E42               	movwf	atraso_ms@valor^0,c
   628   0008EC  ECC6  F004         	call	_atraso_ms	;wreg free
   629   0008F0                     
   630                           ;lcd.c: 64:  PORTEbits.RE1=1;
   631   0008F0  8284               	bsf	132,1,c	;volatile
   632                           
   633                           ;lcd.c: 66:  lcd_cmd(0x38);
   634   0008F2  0E38               	movlw	56
   635   0008F4  ECFF  F004         	call	_lcd_cmd
   636                           
   637                           ;lcd.c: 67:  atraso_ms(5);
   638   0008F8  0E00               	movlw	0
   639   0008FA  6E43               	movwf	(atraso_ms@valor+1)^0,c
   640   0008FC  0E05               	movlw	5
   641   0008FE  6E42               	movwf	atraso_ms@valor^0,c
   642   000900  ECC6  F004         	call	_atraso_ms	;wreg free
   643                           
   644                           ;lcd.c: 68:  lcd_cmd(0x38);
   645   000904  0E38               	movlw	56
   646   000906  ECFF  F004         	call	_lcd_cmd
   647                           
   648                           ;lcd.c: 69:         atraso_ms(1);
   649   00090A  0E00               	movlw	0
   650   00090C  6E43               	movwf	(atraso_ms@valor+1)^0,c
   651   00090E  0E01               	movlw	1
   652   000910  6E42               	movwf	atraso_ms@valor^0,c
   653   000912  ECC6  F004         	call	_atraso_ms	;wreg free
   654                           
   655                           ;lcd.c: 70:  lcd_cmd(0x38);
   656   000916  0E38               	movlw	56
   657   000918  ECFF  F004         	call	_lcd_cmd
   658                           
   659                           ;lcd.c: 71:  lcd_cmd(0x08);
   660   00091C  0E08               	movlw	8
   661   00091E  ECFF  F004         	call	_lcd_cmd
   662                           
   663                           ;lcd.c: 72:  lcd_cmd(0x0F);
   664   000922  0E0F               	movlw	15
   665   000924  ECFF  F004         	call	_lcd_cmd
   666                           
   667                           ;lcd.c: 73:  lcd_cmd(0x01);
   668   000928  0E01               	movlw	1
   669   00092A  ECFF  F004         	call	_lcd_cmd
   670                           
   671                           ;lcd.c: 74:  lcd_cmd(0x38);
   672   00092E  0E38               	movlw	56
   673   000930  ECFF  F004         	call	_lcd_cmd
   674                           
   675                           ;lcd.c: 75:         lcd_cmd(0x80);
   676   000934  0E80               	movlw	128
   677   000936  ECFF  F004         	call	_lcd_cmd
   678   00093A  0012               	return		;funcret
   679   00093C                     __end_of_lcd_init:
   680                           	callstack 0
   681                           
   682 ;; *************** function _lcd_cmd *****************
   683 ;; Defined at:
   684 ;;		line 37 in file "lcd.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  val             1    wreg     unsigned char 
   687 ;; Auto vars:     Size  Location     Type
   688 ;;  val             1    5[COMRAM] unsigned char 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, status,2, status,0, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   698 ;;      Params:         0       0       0       0       0       0       0       0       0
   699 ;;      Locals:         1       0       0       0       0       0       0       0       0
   700 ;;      Temps:          0       0       0       0       0       0       0       0       0
   701 ;;      Totals:         1       0       0       0       0       0       0       0       0
   702 ;;Total ram usage:        1 bytes
   703 ;; Hardware stack levels used: 1
   704 ;; Hardware stack levels required when called: 1
   705 ;; This function calls:
   706 ;;		_atraso_ms
   707 ;;		_lcd_wr
   708 ;; This function is called by:
   709 ;;		_lcd_init
   710 ;;		_main
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text5
   715   0009FE                     __ptext5:
   716                           	callstack 0
   717   0009FE                     _lcd_cmd:
   718                           	callstack 28
   719                           
   720                           ;incstack = 0
   721                           ;lcd_cmd@val stored from wreg
   722   0009FE  6E47               	movwf	lcd_cmd@val^0,c
   723   000A00                     
   724                           ;lcd.c: 37: void lcd_cmd(unsigned char val);lcd.c: 38: {;lcd.c: 39:  PORTEbits.RE1=1;
   725   000A00  8284               	bsf	132,1,c	;volatile
   726   000A02                     
   727                           ;lcd.c: 40:         lcd_wr(val);
   728   000A02  5047               	movf	lcd_cmd@val^0,w,c
   729   000A04  EC3A  F005         	call	_lcd_wr
   730   000A08                     
   731                           ;lcd.c: 41:         PORTEbits.RE0=0;
   732   000A08  9084               	bcf	132,0,c	;volatile
   733   000A0A                     
   734                           ;lcd.c: 42:         atraso_ms(3);
   735   000A0A  0E00               	movlw	0
   736   000A0C  6E43               	movwf	(atraso_ms@valor+1)^0,c
   737   000A0E  0E03               	movlw	3
   738   000A10  6E42               	movwf	atraso_ms@valor^0,c
   739   000A12  ECC6  F004         	call	_atraso_ms	;wreg free
   740   000A16                     
   741                           ;lcd.c: 43:         PORTEbits.RE1=0;
   742   000A16  9284               	bcf	132,1,c	;volatile
   743   000A18                     
   744                           ;lcd.c: 44:         atraso_ms(3);
   745   000A18  0E00               	movlw	0
   746   000A1A  6E43               	movwf	(atraso_ms@valor+1)^0,c
   747   000A1C  0E03               	movlw	3
   748   000A1E  6E42               	movwf	atraso_ms@valor^0,c
   749   000A20  ECC6  F004         	call	_atraso_ms	;wreg free
   750   000A24                     
   751                           ;lcd.c: 45:  PORTEbits.RE1=1;
   752   000A24  8284               	bsf	132,1,c	;volatile
   753   000A26  0012               	return		;funcret
   754   000A28                     __end_of_lcd_cmd:
   755                           	callstack 0
   756                           
   757 ;; *************** function _lcd_wr *****************
   758 ;; Defined at:
   759 ;;		line 32 in file "lcd.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;  val             1    wreg     unsigned char 
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  val             1    0[COMRAM] unsigned char 
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		wreg
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   773 ;;      Params:         0       0       0       0       0       0       0       0       0
   774 ;;      Locals:         1       0       0       0       0       0       0       0       0
   775 ;;      Temps:          0       0       0       0       0       0       0       0       0
   776 ;;      Totals:         1       0       0       0       0       0       0       0       0
   777 ;;Total ram usage:        1 bytes
   778 ;; Hardware stack levels used: 1
   779 ;; This function calls:
   780 ;;		Nothing
   781 ;; This function is called by:
   782 ;;		_lcd_cmd
   783 ;;		_lcd_dat
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           	psect	text6
   788   000A74                     __ptext6:
   789                           	callstack 0
   790   000A74                     _lcd_wr:
   791                           	callstack 28
   792                           
   793                           ;incstack = 0
   794                           ;lcd_wr@val stored from wreg
   795   000A74  6E42               	movwf	lcd_wr@val^0,c
   796   000A76                     
   797                           ;lcd.c: 32: void lcd_wr(unsigned char val);lcd.c: 33: {;lcd.c: 34:   PORTD=val;
   798   000A76  C042  FF83         	movff	lcd_wr@val,3971	;volatile
   799   000A7A  0012               	return		;funcret
   800   000A7C                     __end_of_lcd_wr:
   801                           	callstack 0
   802                           
   803 ;; *************** function _atraso_ms *****************
   804 ;; Defined at:
   805 ;;		line 26 in file "atraso.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  valor           2    0[COMRAM] unsigned int 
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  i               2    2[COMRAM] unsigned int 
   810 ;;  j               1    4[COMRAM] unsigned char 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, status,2, status,0
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   820 ;;      Params:         2       0       0       0       0       0       0       0       0
   821 ;;      Locals:         3       0       0       0       0       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0       0       0       0       0
   823 ;;      Totals:         5       0       0       0       0       0       0       0       0
   824 ;;Total ram usage:        5 bytes
   825 ;; Hardware stack levels used: 1
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_lcd_cmd
   830 ;;		_lcd_dat
   831 ;;		_lcd_init
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           	psect	text7
   836   00098C                     __ptext7:
   837                           	callstack 0
   838   00098C                     _atraso_ms:
   839                           	callstack 28
   840   00098C                     
   841                           ;atraso.c: 26: void atraso_ms(unsigned int valor);atraso.c: 27: {;atraso.c: 28: unsigned
      +                           int i;;atraso.c: 29: unsigned char j;;atraso.c: 31:  for (i =0; i< valor; i++)
   842   00098C  0E00               	movlw	0
   843   00098E  6E45               	movwf	(atraso_ms@i+1)^0,c
   844   000990  0E00               	movlw	0
   845   000992  6E44               	movwf	atraso_ms@i^0,c
   846   000994  EFDE  F004         	goto	l928
   847   000998                     l916:
   848                           
   849                           ;atraso.c: 32:  {;atraso.c: 34:   for (j =0 ; j < 200; j++)
   850   000998  0E00               	movlw	0
   851   00099A  6E46               	movwf	atraso_ms@j^0,c
   852   00099C                     l5:
   853   00099C  F000               	nop		;# 
   854   00099E  F000               	nop		;# 
   855   0009A0  F000               	nop		;# 
   856   0009A2  F000               	nop		;# 
   857   0009A4  F000               	nop		;# 
   858   0009A6                     
   859                           ;atraso.c: 41:    }
   860   0009A6  2A46               	incf	atraso_ms@j^0,f,c
   861   0009A8  0EC7               	movlw	199
   862   0009AA  6446               	cpfsgt	atraso_ms@j^0,c
   863   0009AC  EFDA  F004         	goto	u81
   864   0009B0  EFDC  F004         	goto	u80
   865   0009B4                     u81:
   866   0009B4  EFCE  F004         	goto	l5
   867   0009B8                     u80:
   868   0009B8                     
   869                           ;atraso.c: 42:  }
   870   0009B8  4A44               	infsnz	atraso_ms@i^0,f,c
   871   0009BA  2A45               	incf	(atraso_ms@i+1)^0,f,c
   872   0009BC                     l928:
   873   0009BC  5042               	movf	atraso_ms@valor^0,w,c
   874   0009BE  5C44               	subwf	atraso_ms@i^0,w,c
   875   0009C0  5043               	movf	(atraso_ms@valor+1)^0,w,c
   876   0009C2  5845               	subwfb	(atraso_ms@i+1)^0,w,c
   877   0009C4  A0D8               	btfss	status,0,c
   878   0009C6  EFE7  F004         	goto	u91
   879   0009CA  EFE9  F004         	goto	u90
   880   0009CE                     u91:
   881   0009CE  EFCC  F004         	goto	l916
   882   0009D2                     u90:
   883   0009D2  0012               	return		;funcret
   884   0009D4                     __end_of_atraso_ms:
   885                           	callstack 0
   886                           
   887 ;; *************** function _exit *****************
   888 ;; Defined at:
   889 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\exit.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;  code            2    2[COMRAM] int 
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, status,2, status,0, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   903 ;;      Params:         2       0       0       0       0       0       0       0       0
   904 ;;      Locals:         0       0       0       0       0       0       0       0       0
   905 ;;      Temps:          0       0       0       0       0       0       0       0       0
   906 ;;      Totals:         2       0       0       0       0       0       0       0       0
   907 ;;Total ram usage:        2 bytes
   908 ;; Hardware stack levels used: 1
   909 ;; Hardware stack levels required when called: 1
   910 ;; This function calls:
   911 ;;		__Exit
   912 ;;		___funcs_on_exit
   913 ;; This function is called by:
   914 ;;		_main
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           	psect	text8
   919   000A5A                     __ptext8:
   920                           	callstack 0
   921   000A5A                     _exit:
   922                           	callstack 29
   923   000A5A  EC14  F005         	call	___funcs_on_exit	;wreg free
   924   000A5E  C044  F042         	movff	exit@code,__Exit@ec
   925   000A62  C045  F043         	movff	exit@code+1,__Exit@ec+1
   926   000A66  EC3E  F005         	call	__Exit	;wreg free
   927   000A6A  0012               	return		;funcret
   928   000A6C                     __end_of_exit:
   929                           	callstack 0
   930                           
   931 ;; *************** function ___funcs_on_exit *****************
   932 ;; Defined at:
   933 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atexit.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  func            2    0        PTR FTN()void 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   947 ;;      Params:         0       0       0       0       0       0       0       0       0
   948 ;;      Locals:         0       0       0       0       0       0       0       0       0
   949 ;;      Temps:          0       0       0       0       0       0       0       0       0
   950 ;;      Totals:         0       0       0       0       0       0       0       0       0
   951 ;;Total ram usage:        0 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		_exit
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text9
   961   000A28                     __ptext9:
   962                           	callstack 0
   963   000A28                     ___funcs_on_exit:
   964                           	callstack 29
   965   000A28  EF17  F005         	goto	l844
   966   000A2C                     l842:
   967   000A2C  0641               	decf	_count^0,f,c
   968   000A2E                     l844:
   969   000A2E  5041               	movf	_count^0,w,c
   970   000A30  0A80               	xorlw	128
   971   000A32  0F7F               	addlw	-129
   972   000A34  B0D8               	btfsc	status,0,c
   973   000A36  EF1F  F005         	goto	u31
   974   000A3A  EF21  F005         	goto	u30
   975   000A3E                     u31:
   976   000A3E  EF16  F005         	goto	l842
   977   000A42                     u30:
   978   000A42  0012               	return		;funcret
   979   000A44                     __end_of___funcs_on_exit:
   980                           	callstack 0
   981                           
   982 ;; *************** function __Exit *****************
   983 ;; Defined at:
   984 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\_Exit.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  ec              2    0[COMRAM] int 
   987 ;; Auto vars:     Size  Location     Type
   988 ;;		None
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		None
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   998 ;;      Params:         2       0       0       0       0       0       0       0       0
   999 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1000 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1001 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1002 ;;Total ram usage:        2 bytes
  1003 ;; Hardware stack levels used: 1
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_exit
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text10
  1012   000A7C                     __ptext10:
  1013                           	callstack 0
  1014   000A7C                     __Exit:
  1015                           	callstack 29
  1016   000A7C                     l776:
  1017   000A7C  EF3E  F005         	goto	l776
  1018   000A80  0012               	return		;funcret
  1019   000A82                     __end_of__Exit:
  1020                           	callstack 0
  1021                           
  1022                           	psect	rparam
  1023   000000                     
  1024                           	psect	idloc
  1025                           
  1026                           ;Config register IDLOC0 @ 0x200000
  1027                           ;	unspecified, using default values
  1028   200000                     	org	2097152
  1029   200000  FF                 	db	255
  1030                           
  1031                           ;Config register IDLOC1 @ 0x200001
  1032                           ;	unspecified, using default values
  1033   200001                     	org	2097153
  1034   200001  FF                 	db	255
  1035                           
  1036                           ;Config register IDLOC2 @ 0x200002
  1037                           ;	unspecified, using default values
  1038   200002                     	org	2097154
  1039   200002  FF                 	db	255
  1040                           
  1041                           ;Config register IDLOC3 @ 0x200003
  1042                           ;	unspecified, using default values
  1043   200003                     	org	2097155
  1044   200003  FF                 	db	255
  1045                           
  1046                           ;Config register IDLOC4 @ 0x200004
  1047                           ;	unspecified, using default values
  1048   200004                     	org	2097156
  1049   200004  FF                 	db	255
  1050                           
  1051                           ;Config register IDLOC5 @ 0x200005
  1052                           ;	unspecified, using default values
  1053   200005                     	org	2097157
  1054   200005  FF                 	db	255
  1055                           
  1056                           ;Config register IDLOC6 @ 0x200006
  1057                           ;	unspecified, using default values
  1058   200006                     	org	2097158
  1059   200006  FF                 	db	255
  1060                           
  1061                           ;Config register IDLOC7 @ 0x200007
  1062                           ;	unspecified, using default values
  1063   200007                     	org	2097159
  1064   200007  FF                 	db	255
  1065                           
  1066                           	psect	config
  1067                           
  1068                           ;Config register CONFIG1L @ 0x300000
  1069                           ;	PLL Prescaler Selection bits
  1070                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  1071                           ;	System Clock Postscaler Selection bits
  1072                           ;	CPUDIV = OSC2_PLL3, [Primary Oscillator Src: /2][96 MHz PLL Src: /3]
  1073                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1074                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  1075   300000                     	org	3145728
  1076   300000  29                 	db	41
  1077                           
  1078                           ;Config register CONFIG1H @ 0x300001
  1079                           ;	Oscillator Selection bits
  1080                           ;	FOSC = HS, HS oscillator (HS)
  1081                           ;	Fail-Safe Clock Monitor Enable bit
  1082                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1083                           ;	Internal/External Oscillator Switchover bit
  1084                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1085   300001                     	org	3145729
  1086   300001  0C                 	db	12
  1087                           
  1088                           ;Config register CONFIG2L @ 0x300002
  1089                           ;	Power-up Timer Enable bit
  1090                           ;	PWRT = ON, PWRT enabled
  1091                           ;	Brown-out Reset Enable bits
  1092                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1093                           ;	Brown-out Reset Voltage bits
  1094                           ;	BORV = 3, Minimum setting 2.05V
  1095                           ;	USB Voltage Regulator Enable bit
  1096                           ;	VREGEN = OFF, USB voltage regulator disabled
  1097   300002                     	org	3145730
  1098   300002  18                 	db	24
  1099                           
  1100                           ;Config register CONFIG2H @ 0x300003
  1101                           ;	Watchdog Timer Enable bit
  1102                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1103                           ;	Watchdog Timer Postscale Select bits
  1104                           ;	WDTPS = 32768, 1:32768
  1105   300003                     	org	3145731
  1106   300003  1E                 	db	30
  1107                           
  1108                           ; Padding undefined space
  1109   300004                     	org	3145732
  1110   300004  FF                 	db	255
  1111                           
  1112                           ;Config register CONFIG3H @ 0x300005
  1113                           ;	CCP2 MUX bit
  1114                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1115                           ;	PORTB A/D Enable bit
  1116                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1117                           ;	Low-Power Timer 1 Oscillator Enable bit
  1118                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1119                           ;	MCLR Pin Enable bit
  1120                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1121   300005                     	org	3145733
  1122   300005  81                 	db	129
  1123                           
  1124                           ;Config register CONFIG4L @ 0x300006
  1125                           ;	Stack Full/Underflow Reset Enable bit
  1126                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1127                           ;	Single-Supply ICSP Enable bit
  1128                           ;	LVP = OFF, Single-Supply ICSP disabled
  1129                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1130                           ;	ICPRT = OFF, ICPORT disabled
  1131                           ;	Extended Instruction Set Enable bit
  1132                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1133                           ;	Background Debugger Enable bit
  1134                           ;	DEBUG = 0x1, unprogrammed default
  1135   300006                     	org	3145734
  1136   300006  80                 	db	128
  1137                           
  1138                           ; Padding undefined space
  1139   300007                     	org	3145735
  1140   300007  FF                 	db	255
  1141                           
  1142                           ;Config register CONFIG5L @ 0x300008
  1143                           ;	Code Protection bit
  1144                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1145                           ;	Code Protection bit
  1146                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1147                           ;	Code Protection bit
  1148                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1149                           ;	Code Protection bit
  1150                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1151   300008                     	org	3145736
  1152   300008  0F                 	db	15
  1153                           
  1154                           ;Config register CONFIG5H @ 0x300009
  1155                           ;	Boot Block Code Protection bit
  1156                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1157                           ;	Data EEPROM Code Protection bit
  1158                           ;	CPD = OFF, Data EEPROM is not code-protected
  1159   300009                     	org	3145737
  1160   300009  C0                 	db	192
  1161                           
  1162                           ;Config register CONFIG6L @ 0x30000A
  1163                           ;	Write Protection bit
  1164                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1165                           ;	Write Protection bit
  1166                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1167                           ;	Write Protection bit
  1168                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1169                           ;	Write Protection bit
  1170                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1171   30000A                     	org	3145738
  1172   30000A  0F                 	db	15
  1173                           
  1174                           ;Config register CONFIG6H @ 0x30000B
  1175                           ;	Configuration Register Write Protection bit
  1176                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1177                           ;	Boot Block Write Protection bit
  1178                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1179                           ;	Data EEPROM Write Protection bit
  1180                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1181   30000B                     	org	3145739
  1182   30000B  E0                 	db	224
  1183                           
  1184                           ;Config register CONFIG7L @ 0x30000C
  1185                           ;	Table Read Protection bit
  1186                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1187                           ;	Table Read Protection bit
  1188                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1189                           ;	Table Read Protection bit
  1190                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1191                           ;	Table Read Protection bit
  1192                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1193   30000C                     	org	3145740
  1194   30000C  0F                 	db	15
  1195                           
  1196                           ;Config register CONFIG7H @ 0x30000D
  1197                           ;	Boot Block Table Read Protection bit
  1198                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1199   30000D                     	org	3145741
  1200   30000D  40                 	db	64
  1201                           tosu	equ	0xFFF
  1202                           tosh	equ	0xFFE
  1203                           tosl	equ	0xFFD
  1204                           stkptr	equ	0xFFC
  1205                           pclatu	equ	0xFFB
  1206                           pclath	equ	0xFFA
  1207                           pcl	equ	0xFF9
  1208                           tblptru	equ	0xFF8
  1209                           tblptrh	equ	0xFF7
  1210                           tblptrl	equ	0xFF6
  1211                           tablat	equ	0xFF5
  1212                           prodh	equ	0xFF4
  1213                           prodl	equ	0xFF3
  1214                           indf0	equ	0xFEF
  1215                           postinc0	equ	0xFEE
  1216                           postdec0	equ	0xFED
  1217                           preinc0	equ	0xFEC
  1218                           plusw0	equ	0xFEB
  1219                           fsr0h	equ	0xFEA
  1220                           fsr0l	equ	0xFE9
  1221                           wreg	equ	0xFE8
  1222                           indf1	equ	0xFE7
  1223                           postinc1	equ	0xFE6
  1224                           postdec1	equ	0xFE5
  1225                           preinc1	equ	0xFE4
  1226                           plusw1	equ	0xFE3
  1227                           fsr1h	equ	0xFE2
  1228                           fsr1l	equ	0xFE1
  1229                           bsr	equ	0xFE0
  1230                           indf2	equ	0xFDF
  1231                           postinc2	equ	0xFDE
  1232                           postdec2	equ	0xFDD
  1233                           preinc2	equ	0xFDC
  1234                           plusw2	equ	0xFDB
  1235                           fsr2h	equ	0xFDA
  1236                           fsr2l	equ	0xFD9
  1237                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         65
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     13      78
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    funcs	PTR FTN()void [32] size(2) Largest target is 0

    __funcs_on_exit@func	PTR FTN()void  size(2) Largest target is 0

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[13]), STR_2(CODE[14]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_lcd_str
    _lcd_str->_lcd_dat
    _lcd_numb->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_init->_lcd_cmd
    _lcd_cmd->_atraso_ms
    _exit->__Exit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    3905
                                             11 COMRAM     2     2      0
                               _exit
                            _lcd_cmd
                           _lcd_init
                           _lcd_numb
                            _lcd_str
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2     979
                                              6 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _lcd_numb                                             2     0      2     759
                                              6 COMRAM     2     0      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0     661
                                              5 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    1285
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0     661
                                              5 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            5     3      2     624
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _exit                                                 2     0      2     174
                                              2 COMRAM     2     0      2
                              __Exit
                    ___funcs_on_exit
 ---------------------------------------------------------------------------------
 (2) ___funcs_on_exit                                      2     2      0       0
 ---------------------------------------------------------------------------------
 (2) __Exit                                                2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _exit
     __Exit
     ___funcs_on_exit
   _lcd_cmd
     _atraso_ms
     _lcd_wr
   _lcd_init
     _atraso_ms
     _lcd_cmd
   _lcd_numb
     _lcd_dat
       _atraso_ms
       _lcd_wr
   _lcd_str
     _lcd_dat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBIGSFRhh         69      0       0      21        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      D      4E       1       82.1%
BITBIGSFRll         21      0       0      25        0.0%
BITBIGSFRhll         E      0       0      23        0.0%
BITBIGSFRlh          1      0       0      24        0.0%
BITBIGSFRhlh         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4E       3        0.0%
DATA                 0      0      4E       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Nov 09 15:55:55 2022

                      l5 099C                        l8 09D2                       l42 0A7A  
                     l51 093A                       l60 0A72                       l45 0A26  
                     l48 09FC                       l57 098A                       u30 0A42  
                     u31 0A3E                       u80 09B8                       u81 09B4  
                     u90 09D2                       u91 09CE                      l810 0A76  
                    l840 0A28                      l842 0A2C                      l922 09A6  
                    l914 098C                      l930 0A00                      l844 0A2E  
                    l924 09A8                      l916 0998                      l940 0A18  
                    l932 0A02                      l773 0A6A                      l926 09B8  
                    l942 0A24                      l934 0A08                      l950 09E0  
                    l776 0A7C                      l928 09BC                      l936 0A0A  
                    l960 08E4                      l952 09EC                      l944 09D6  
                    l938 0A16                      l962 08F0                      l954 09EE  
                    l946 09D8                      l970 0962                      l788 0A42  
                    l956 09FA                      l948 09DE                      l972 0A6C  
                    l964 093C                      l980 0830                      l974 0A5A  
                    l958 08E0                      l966 0944                      l990 0854  
                    l982 0832                      l976 0A5E                      l968 0960  
                    l992 0868                      l984 083C                      l994 086C  
                    l986 0840                      l978 0824                      l996 0872  
                    l988 0846                      l998 0878                      u100 098A  
                    u101 0986                      u110 0854                      u111 0850  
                    u120 0868                      u121 0864                      u130 08C6  
                    u131 08C2                      wreg 000FE8                     l1000 0884  
                   l1002 088A                     l1010 08B8                     l1012 08C6  
                   l1004 089A                     l1014 08D2                     l1006 08A0  
                   l1008 08AC                     STR_1 081C                     STR_2 0801  
                   STR_3 080F              lcd_numb@str 0048                     _main 0824  
                   _exit 0A5A                     start 0000             ___param_bank 000000  
                  ?_main 0042                    ?_exit 0044                    _PORTD 000F83  
                  _TRISB 000F93                    _TRISD 000F95                    _TRISE 000F96  
                  __Exit 0A7C          __end_of_lcd_dat 09FE          __end_of_lcd_cmd 0A28  
        __end_of_lcd_str 098C                    _count 0041                    _funcs 0001  
                  tablat 000FF5                    status 000FD8          __initialization 0A44  
           __end_of_main 08E0             __end_of_exit 0A6C                   ??_main 004D  
                 ??_exit 0046            __activetblptr 000002                   ?__Exit 0042  
       __end_of_lcd_init 093C         __end_of_lcd_numb 0A74                   _lcd_wr 0A74  
                 clear_0 0A4A                   isa$std 000001                ??_lcd_dat 0047  
              ??_lcd_cmd 0047                ??_lcd_str 004A             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0A50            ___rparam_used 000001  
         __pcstackCOMRAM 0042            __end_of__Exit 0A82        ??___funcs_on_exit 0042  
                ??__Exit 0044                  ?_lcd_wr 0042                ?_lcd_init 0042  
              ?_lcd_numb 0048                  __Hparam 0000                  __Lparam 0000  
      __end_of_atraso_ms 09D4             __psmallconst 0800                  __pcinit 0A44  
                __ramtop 0800                  __ptext0 0824                  __ptext1 093C  
                __ptext2 0A6C                  __ptext3 09D4                  __ptext4 08E0  
                __ptext5 09FE                  __ptext6 0A74                  __ptext7 098C  
                __ptext8 0A5A                  __ptext9 0A28                  _lcd_dat 09D4  
                _lcd_cmd 09FE                  _lcd_str 093C               ??_lcd_init 0048  
             ??_lcd_numb 004A     end_of_initialization 0A50            __Lmediumconst 0000  
                postinc0 000FEE                _PORTBbits 000F81                _PORTEbits 000F84  
              _TRISBbits 000F93               lcd_dat@val 0047               lcd_cmd@val 0047  
             lcd_str@str 0048          ___funcs_on_exit 0A28               atraso_ms@i 0044  
             atraso_ms@j 0046           __end_of_lcd_wr 0A7C      start_initialization 0A44  
               ??_lcd_wr 0042              __pbssCOMRAM 0001  __end_of___funcs_on_exit 0A44  
               ?_lcd_dat 0042                 ?_lcd_cmd 0042                 ?_lcd_str 0048  
              _atraso_ms 098C              __smallconst 0800           atraso_ms@valor 0042  
             ?_atraso_ms 0042                lcd_wr@val 0042         ?___funcs_on_exit 0042  
               __Exit@ec 0042                 __Hrparam 0000                 __Lrparam 0000  
               __ptext10 0A7C                 _lcd_init 08E0                 _lcd_numb 0A6C  
               isa$xinst 000000                 main@casa 004D                 lcd_str@i 004C  
            ??_atraso_ms 0044                 exit@code 0044  
