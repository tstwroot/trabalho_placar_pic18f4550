

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Nov 09 09:44:22 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4550 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     _PORTBbits	set	3969
    60   000000                     _PORTD	set	3971
    61   000000                     _TRISB	set	3987
    62   000000                     _TRISD	set	3989
    63   000000                     _PORTEbits	set	3972
    64   000000                     _TRISE	set	3990
    65                           
    66                           	psect	smallconst
    67   000800                     __psmallconst:
    68                           	callstack 0
    69   000800  00                 	db	0
    70   000801                     STR_3:
    71   000801  63                 	db	99	;'c'
    72   000802  61                 	db	97	;'a'
    73   000803  73                 	db	115	;'s'
    74   000804  61                 	db	97	;'a'
    75   000805  20                 	db	32
    76   000806  76                 	db	118	;'v'
    77   000807  65                 	db	101	;'e'
    78   000808  6E                 	db	110	;'n'
    79   000809  63                 	db	99	;'c'
    80   00080A  65                 	db	101	;'e'
    81   00080B  64                 	db	100	;'d'
    82   00080C  6F                 	db	111	;'o'
    83   00080D  72                 	db	114	;'r'
    84   00080E  00                 	db	0
    85   00080F                     STR_2:
    86   00080F  56                 	db	86	;'V'
    87   000810  49                 	db	73	;'I'
    88   000811  53                 	db	83	;'S'
    89   000812  49                 	db	73	;'I'
    90   000813  54                 	db	84	;'T'
    91   000814  41                 	db	65	;'A'
    92   000815  4E                 	db	78	;'N'
    93   000816  54                 	db	84	;'T'
    94   000817  45                 	db	69	;'E'
    95   000818  3A                 	db	58	;':'
    96   000819  20                 	db	32
    97   00081A  00                 	db	0
    98   00081B                     STR_1:
    99   00081B  43                 	db	67	;'C'
   100   00081C  41                 	db	65	;'A'
   101   00081D  53                 	db	83	;'S'
   102   00081E  41                 	db	65	;'A'
   103   00081F  3A                 	db	58	;':'
   104   000820  20                 	db	32
   105   000821  00                 	db	0
   106   000822  00                 	db	0	; dummy byte at the end
   107   000000                     
   108                           ; #config settings
   109                           
   110                           	psect	cinit
   111   000A48                     __pcinit:
   112                           	callstack 0
   113   000A48                     start_initialization:
   114                           	callstack 0
   115   000A48                     __initialization:
   116                           	callstack 0
   117                           
   118                           ; Clear objects allocated to COMRAM (65 bytes)
   119   000A48  EE00  F001         	lfsr	0,__pbssCOMRAM
   120   000A4C  0E41               	movlw	65
   121   000A4E                     clear_0:
   122   000A4E  6AEE               	clrf	postinc0,c
   123   000A50  06E8               	decf	wreg,f,c
   124   000A52  E1FD               	bnz	clear_0
   125   000A54                     end_of_initialization:
   126                           	callstack 0
   127   000A54                     __end_of__initialization:
   128                           	callstack 0
   129   000A54  0E00               	movlw	low (__Lmediumconst shr (0+16))
   130   000A56  6EF8               	movwf	tblptru,c
   131   000A58  0100               	movlb	0
   132   000A5A  EF12  F004         	goto	_main	;jump to C main() function
   133                           
   134                           	psect	bssCOMRAM
   135   000001                     __pbssCOMRAM:
   136                           	callstack 0
   137   000001                     _funcs:
   138                           	callstack 0
   139   000001                     	ds	64
   140   000041                     _count:
   141                           	callstack 0
   142   000041                     	ds	1
   143                           
   144                           	psect	cstackCOMRAM
   145   000042                     __pcstackCOMRAM:
   146                           	callstack 0
   147   000042                     lcd_wr@val:
   148                           	callstack 0
   149   000042                     atraso_ms@valor:
   150                           	callstack 0
   151   000042                     __Exit@ec:
   152                           	callstack 0
   153                           
   154                           ; 2 bytes @ 0x0
   155   000042                     	ds	2
   156   000044                     atraso_ms@i:
   157                           	callstack 0
   158   000044                     exit@code:
   159                           	callstack 0
   160                           
   161                           ; 2 bytes @ 0x2
   162   000044                     	ds	2
   163   000046                     atraso_ms@j:
   164                           	callstack 0
   165                           
   166                           ; 1 bytes @ 0x4
   167   000046                     	ds	1
   168   000047                     lcd_cmd@val:
   169                           	callstack 0
   170   000047                     lcd_dat@val:
   171                           	callstack 0
   172                           
   173                           ; 1 bytes @ 0x5
   174   000047                     	ds	1
   175   000048                     lcd_str@str:
   176                           	callstack 0
   177                           
   178                           ; 2 bytes @ 0x6
   179   000048                     	ds	2
   180   00004A                     ??_lcd_str:
   181                           
   182                           ; 1 bytes @ 0x8
   183   00004A                     	ds	2
   184   00004C                     lcd_str@i:
   185                           	callstack 0
   186                           
   187                           ; 1 bytes @ 0xA
   188   00004C                     	ds	1
   189   00004D                     main@casa_:
   190                           	callstack 0
   191                           
   192                           ; 2 bytes @ 0xB
   193   00004D                     	ds	2
   194   00004F                     main@visitante_:
   195                           	callstack 0
   196                           
   197                           ; 2 bytes @ 0xD
   198   00004F                     	ds	2
   199   000051                     main@casa:
   200                           	callstack 0
   201                           
   202                           ; 2 bytes @ 0xF
   203   000051                     	ds	2
   204                           
   205 ;;
   206 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   207 ;;
   208 ;; *************** function _main *****************
   209 ;; Defined at:
   210 ;;		line 19 in file "newmain.c"
   211 ;; Parameters:    Size  Location     Type
   212 ;;		None
   213 ;; Auto vars:     Size  Location     Type
   214 ;;  casa            2   15[COMRAM] int 
   215 ;;  visitante_      2   13[COMRAM] PTR unsigned char 
   216 ;;  casa_           2   11[COMRAM] PTR unsigned char 
   217 ;;  visitante       2    0        int 
   218 ;; Return value:  Size  Location     Type
   219 ;;                  2   77[None  ] int 
   220 ;; Registers used:
   221 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   222 ;; Tracked objects:
   223 ;;		On entry : 0/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   227 ;;      Params:         0       0       0       0       0       0       0       0       0
   228 ;;      Locals:         6       0       0       0       0       0       0       0       0
   229 ;;      Temps:          0       0       0       0       0       0       0       0       0
   230 ;;      Totals:         6       0       0       0       0       0       0       0       0
   231 ;;Total ram usage:        6 bytes
   232 ;; Hardware stack levels required when called: 3
   233 ;; This function calls:
   234 ;;		_exit
   235 ;;		_lcd_cmd
   236 ;;		_lcd_init
   237 ;;		_lcd_str
   238 ;; This function is called by:
   239 ;;		Startup code after reset
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243                           	psect	text0
   244   000824                     __ptext0:
   245                           	callstack 0
   246   000824                     _main:
   247                           	callstack 28
   248   000824                     
   249                           ;newmain.c: 21:     TRISD = 0x00;
   250   000824  0E00               	movlw	0
   251   000826  6E95               	movwf	149,c	;volatile
   252                           
   253                           ;newmain.c: 22:     TRISB = 0b0000110;
   254   000828  0E06               	movlw	6
   255   00082A  6E93               	movwf	147,c	;volatile
   256                           
   257                           ;newmain.c: 23:     TRISE = 0x00;
   258   00082C  0E00               	movlw	0
   259   00082E  6E96               	movwf	150,c	;volatile
   260   000830                     
   261                           ;newmain.c: 25:     PORTBbits.RB7 = 1;
   262   000830  8E81               	bsf	129,7,c	;volatile
   263   000832                     
   264                           ;newmain.c: 26:     PORTBbits.RB4 = 1;
   265   000832  8881               	bsf	129,4,c	;volatile
   266                           
   267                           ;newmain.c: 27:     int casa = 0, visitante = 0;
   268   000834  0E00               	movlw	0
   269   000836  6E52               	movwf	(main@casa+1)^0,c
   270   000838  0E00               	movlw	0
   271   00083A  6E51               	movwf	main@casa^0,c
   272   00083C                     
   273                           ;newmain.c: 28:     char *casa_, *visitante_;;newmain.c: 29:     lcd_init();
   274   00083C  EC72  F004         	call	_lcd_init	;wreg free
   275   000840                     
   276                           ;newmain.c: 30:     lcd_cmd(0x01);
   277   000840  0E01               	movlw	1
   278   000842  EC01  F005         	call	_lcd_cmd
   279   000846                     l978:
   280                           
   281                           ;newmain.c: 33:     {;newmain.c: 34:         if(PORTBbits.RB2 == 0)
   282   000846  B481               	btfsc	129,2,c	;volatile
   283   000848  EF28  F004         	goto	u101
   284   00084C  EF2A  F004         	goto	u100
   285   000850                     u101:
   286   000850  EF23  F004         	goto	l978
   287   000854                     u100:
   288   000854                     
   289                           ;newmain.c: 35:         {;newmain.c: 36:             if(casa != 9)
   290   000854  0E09               	movlw	9
   291   000856  1851               	xorwf	main@casa^0,w,c
   292   000858  1052               	iorwf	(main@casa+1)^0,w,c
   293   00085A  B4D8               	btfsc	status,2,c
   294   00085C  EF32  F004         	goto	u111
   295   000860  EF34  F004         	goto	u110
   296   000864                     u111:
   297   000864  EF5F  F004         	goto	l1002
   298   000868                     u110:
   299   000868                     
   300                           ;newmain.c: 40:                 *visitante_ = casa+48;
   301   000868  4A51               	infsnz	main@casa^0,f,c
   302   00086A  2A52               	incf	(main@casa+1)^0,f,c
   303   00086C                     
   304                           ;newmain.c: 41:                 lcd_cmd(0x01);
   305   00086C  0E01               	movlw	1
   306   00086E  EC01  F005         	call	_lcd_cmd
   307   000872                     
   308                           ;newmain.c: 42:                 lcd_cmd(0x80);
   309   000872  0E80               	movlw	128
   310   000874  EC01  F005         	call	_lcd_cmd
   311   000878                     
   312                           ;newmain.c: 43:                 lcd_str("CASA: ");
   313   000878  0E1B               	movlw	low STR_1
   314   00087A  6E48               	movwf	lcd_str@str^0,c
   315   00087C  0E08               	movlw	high STR_1
   316   00087E  6E49               	movwf	(lcd_str@str+1)^0,c
   317   000880  ECA0  F004         	call	_lcd_str	;wreg free
   318   000884                     
   319                           ;newmain.c: 44:                 lcd_cmd(0x86);
   320   000884  0E86               	movlw	134
   321   000886  EC01  F005         	call	_lcd_cmd
   322   00088A                     
   323                           ;newmain.c: 45:                 lcd_str(casa_);
   324   00088A  C04D  F048         	movff	main@casa_,lcd_str@str
   325   00088E  C04E  F049         	movff	main@casa_+1,lcd_str@str+1
   326   000892  ECA0  F004         	call	_lcd_str	;wreg free
   327   000896                     
   328                           ;newmain.c: 46:                 lcd_cmd(0xC0);
   329   000896  0EC0               	movlw	192
   330   000898  EC01  F005         	call	_lcd_cmd
   331   00089C                     
   332                           ;newmain.c: 47:                 lcd_str("VISITANTE: ");
   333   00089C  0E0F               	movlw	low STR_2
   334   00089E  6E48               	movwf	lcd_str@str^0,c
   335   0008A0  0E08               	movlw	high STR_2
   336   0008A2  6E49               	movwf	(lcd_str@str+1)^0,c
   337   0008A4  ECA0  F004         	call	_lcd_str	;wreg free
   338   0008A8                     
   339                           ;newmain.c: 48:                 lcd_cmd(0xcb);
   340   0008A8  0ECB               	movlw	203
   341   0008AA  EC01  F005         	call	_lcd_cmd
   342   0008AE                     
   343                           ;newmain.c: 49:                 lcd_str(visitante_);
   344   0008AE  C04F  F048         	movff	main@visitante_,lcd_str@str
   345   0008B2  C050  F049         	movff	main@visitante_+1,lcd_str@str+1
   346   0008B6  ECA0  F004         	call	_lcd_str	;wreg free
   347                           
   348                           ;newmain.c: 50:             }
   349   0008BA  EF23  F004         	goto	l978
   350   0008BE                     l1002:
   351                           
   352                           ;newmain.c: 52:             {;newmain.c: 53:                 lcd_cmd(0x01);
   353   0008BE  0E01               	movlw	1
   354   0008C0  EC01  F005         	call	_lcd_cmd
   355   0008C4                     
   356                           ;newmain.c: 54:                 lcd_str("casa vencedor");
   357   0008C4  0E01               	movlw	low STR_3
   358   0008C6  6E48               	movwf	lcd_str@str^0,c
   359   0008C8  0E08               	movlw	high STR_3
   360   0008CA  6E49               	movwf	(lcd_str@str+1)^0,c
   361   0008CC  ECA0  F004         	call	_lcd_str	;wreg free
   362   0008D0                     
   363                           ;newmain.c: 55:                 exit(0);
   364   0008D0  0E00               	movlw	0
   365   0008D2  6E45               	movwf	(exit@code+1)^0,c
   366   0008D4  0E00               	movlw	0
   367   0008D6  6E44               	movwf	exit@code^0,c
   368   0008D8  EC2F  F005         	call	_exit	;wreg free
   369   0008DC  EF23  F004         	goto	l978
   370   0008E0  EF00  F000         	goto	start
   371   0008E4                     __end_of_main:
   372                           	callstack 0
   373                           
   374 ;; *************** function _lcd_str *****************
   375 ;; Defined at:
   376 ;;		line 76 in file "lcd.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;  str             2    6[COMRAM] PTR const unsigned char 
   379 ;;		 -> STR_3(14), STR_2(12), STR_1(7), 
   380 ;; Auto vars:     Size  Location     Type
   381 ;;  i               1   10[COMRAM] unsigned char 
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   391 ;;      Params:         2       0       0       0       0       0       0       0       0
   392 ;;      Locals:         1       0       0       0       0       0       0       0       0
   393 ;;      Temps:          2       0       0       0       0       0       0       0       0
   394 ;;      Totals:         5       0       0       0       0       0       0       0       0
   395 ;;Total ram usage:        5 bytes
   396 ;; Hardware stack levels used: 1
   397 ;; Hardware stack levels required when called: 2
   398 ;; This function calls:
   399 ;;		_lcd_dat
   400 ;; This function is called by:
   401 ;;		_main
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405                           	psect	text1
   406   000940                     __ptext1:
   407                           	callstack 0
   408   000940                     _lcd_str:
   409                           	callstack 28
   410   000940                     
   411                           ;lcd.c: 76: void lcd_str(const char* str);lcd.c: 77: {;lcd.c: 78:  unsigned char i=0;
   412   000940  0E00               	movlw	0
   413   000942  6E4C               	movwf	lcd_str@i^0,c
   414                           
   415                           ;lcd.c: 80:  while(str[i] != 0 )
   416   000944  EFB3  F004         	goto	l962
   417   000948                     l958:
   418                           
   419                           ;lcd.c: 81:  {;lcd.c: 82:    lcd_dat(str[i]);
   420   000948  504C               	movf	lcd_str@i^0,w,c
   421   00094A  2448               	addwf	lcd_str@str^0,w,c
   422   00094C  6E4A               	movwf	??_lcd_str^0,c
   423   00094E  0E00               	movlw	0
   424   000950  2049               	addwfc	(lcd_str@str+1)^0,w,c
   425   000952  6E4B               	movwf	(??_lcd_str+1)^0,c
   426   000954  C04A  FFF6         	movff	??_lcd_str,tblptrl
   427   000958  C04B  FFF7         	movff	??_lcd_str+1,tblptrh
   428   00095C                     	if	0	;tblptru may be non-zero
   429   00095C                     	endif
   430   00095C                     	if	0	;tblptru may be non-zero
   431   00095C                     	endif
   432   00095C  0008               	tblrd		*
   433   00095E  50F5               	movf	tablat,w,c
   434   000960  ECEC  F004         	call	_lcd_dat
   435   000964                     
   436                           ;lcd.c: 83:    i++;
   437   000964  2A4C               	incf	lcd_str@i^0,f,c
   438   000966                     l962:
   439                           
   440                           ;lcd.c: 80:  while(str[i] != 0 )
   441   000966  504C               	movf	lcd_str@i^0,w,c
   442   000968  2448               	addwf	lcd_str@str^0,w,c
   443   00096A  6E4A               	movwf	??_lcd_str^0,c
   444   00096C  0E00               	movlw	0
   445   00096E  2049               	addwfc	(lcd_str@str+1)^0,w,c
   446   000970  6E4B               	movwf	(??_lcd_str+1)^0,c
   447   000972  C04A  FFF6         	movff	??_lcd_str,tblptrl
   448   000976  C04B  FFF7         	movff	??_lcd_str+1,tblptrh
   449   00097A                     	if	0	;tblptru may be non-zero
   450   00097A                     	endif
   451   00097A                     	if	0	;tblptru may be non-zero
   452   00097A                     	endif
   453   00097A  0008               	tblrd		*
   454   00097C  50F5               	movf	tablat,w,c
   455   00097E  0900               	iorlw	0
   456   000980  A4D8               	btfss	status,2,c
   457   000982  EFC5  F004         	goto	u91
   458   000986  EFC7  F004         	goto	u90
   459   00098A                     u91:
   460   00098A  EFA4  F004         	goto	l958
   461   00098E                     u90:
   462   00098E  0012               	return		;funcret
   463   000990                     __end_of_lcd_str:
   464                           	callstack 0
   465                           
   466 ;; *************** function _lcd_dat *****************
   467 ;; Defined at:
   468 ;;		line 46 in file "lcd.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;  val             1    wreg     unsigned char 
   471 ;; Auto vars:     Size  Location     Type
   472 ;;  val             1    5[COMRAM] unsigned char 
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		wreg, status,2, status,0, cstack
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   482 ;;      Params:         0       0       0       0       0       0       0       0       0
   483 ;;      Locals:         1       0       0       0       0       0       0       0       0
   484 ;;      Temps:          0       0       0       0       0       0       0       0       0
   485 ;;      Totals:         1       0       0       0       0       0       0       0       0
   486 ;;Total ram usage:        1 bytes
   487 ;; Hardware stack levels used: 1
   488 ;; Hardware stack levels required when called: 1
   489 ;; This function calls:
   490 ;;		_atraso_ms
   491 ;;		_lcd_wr
   492 ;; This function is called by:
   493 ;;		_lcd_str
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           	psect	text2
   498   0009D8                     __ptext2:
   499                           	callstack 0
   500   0009D8                     _lcd_dat:
   501                           	callstack 28
   502                           
   503                           ;incstack = 0
   504                           ;lcd_dat@val stored from wreg
   505   0009D8  6E47               	movwf	lcd_dat@val^0,c
   506   0009DA                     
   507                           ;lcd.c: 46: void lcd_dat(unsigned char val);lcd.c: 47: {;lcd.c: 48:  PORTEbits.RE1=1;
   508   0009DA  8284               	bsf	132,1,c	;volatile
   509   0009DC                     
   510                           ;lcd.c: 49:         lcd_wr(val);
   511   0009DC  5047               	movf	lcd_dat@val^0,w,c
   512   0009DE  EC38  F005         	call	_lcd_wr
   513   0009E2                     
   514                           ;lcd.c: 50:         PORTEbits.RE0=1;
   515   0009E2  8084               	bsf	132,0,c	;volatile
   516   0009E4                     
   517                           ;lcd.c: 51:         atraso_ms(3);
   518   0009E4  0E00               	movlw	0
   519   0009E6  6E43               	movwf	(atraso_ms@valor+1)^0,c
   520   0009E8  0E03               	movlw	3
   521   0009EA  6E42               	movwf	atraso_ms@valor^0,c
   522   0009EC  ECC8  F004         	call	_atraso_ms	;wreg free
   523   0009F0                     
   524                           ;lcd.c: 52:         PORTEbits.RE1=0;
   525   0009F0  9284               	bcf	132,1,c	;volatile
   526   0009F2                     
   527                           ;lcd.c: 53:         atraso_ms(3);
   528   0009F2  0E00               	movlw	0
   529   0009F4  6E43               	movwf	(atraso_ms@valor+1)^0,c
   530   0009F6  0E03               	movlw	3
   531   0009F8  6E42               	movwf	atraso_ms@valor^0,c
   532   0009FA  ECC8  F004         	call	_atraso_ms	;wreg free
   533   0009FE                     
   534                           ;lcd.c: 54:  PORTEbits.RE1=1;
   535   0009FE  8284               	bsf	132,1,c	;volatile
   536   000A00  0012               	return		;funcret
   537   000A02                     __end_of_lcd_dat:
   538                           	callstack 0
   539                           
   540 ;; *************** function _lcd_init *****************
   541 ;; Defined at:
   542 ;;		line 57 in file "lcd.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;		None
   545 ;; Auto vars:     Size  Location     Type
   546 ;;		None
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg, status,2, status,0, cstack
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   556 ;;      Params:         0       0       0       0       0       0       0       0       0
   557 ;;      Locals:         0       0       0       0       0       0       0       0       0
   558 ;;      Temps:          0       0       0       0       0       0       0       0       0
   559 ;;      Totals:         0       0       0       0       0       0       0       0       0
   560 ;;Total ram usage:        0 bytes
   561 ;; Hardware stack levels used: 1
   562 ;; Hardware stack levels required when called: 2
   563 ;; This function calls:
   564 ;;		_atraso_ms
   565 ;;		_lcd_cmd
   566 ;; This function is called by:
   567 ;;		_main
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           	psect	text3
   572   0008E4                     __ptext3:
   573                           	callstack 0
   574   0008E4                     _lcd_init:
   575                           	callstack 28
   576   0008E4                     
   577                           ;lcd.c: 59:  PORTEbits.RE1=0;
   578   0008E4  9284               	bcf	132,1,c	;volatile
   579                           
   580                           ;lcd.c: 60:  PORTEbits.RE0=0;
   581   0008E6  9084               	bcf	132,0,c	;volatile
   582   0008E8                     
   583                           ;lcd.c: 61:  atraso_ms(20);
   584   0008E8  0E00               	movlw	0
   585   0008EA  6E43               	movwf	(atraso_ms@valor+1)^0,c
   586   0008EC  0E14               	movlw	20
   587   0008EE  6E42               	movwf	atraso_ms@valor^0,c
   588   0008F0  ECC8  F004         	call	_atraso_ms	;wreg free
   589   0008F4                     
   590                           ;lcd.c: 62:  PORTEbits.RE1=1;
   591   0008F4  8284               	bsf	132,1,c	;volatile
   592                           
   593                           ;lcd.c: 64:  lcd_cmd(0x38);
   594   0008F6  0E38               	movlw	56
   595   0008F8  EC01  F005         	call	_lcd_cmd
   596                           
   597                           ;lcd.c: 65:  atraso_ms(5);
   598   0008FC  0E00               	movlw	0
   599   0008FE  6E43               	movwf	(atraso_ms@valor+1)^0,c
   600   000900  0E05               	movlw	5
   601   000902  6E42               	movwf	atraso_ms@valor^0,c
   602   000904  ECC8  F004         	call	_atraso_ms	;wreg free
   603                           
   604                           ;lcd.c: 66:  lcd_cmd(0x38);
   605   000908  0E38               	movlw	56
   606   00090A  EC01  F005         	call	_lcd_cmd
   607                           
   608                           ;lcd.c: 67:         atraso_ms(1);
   609   00090E  0E00               	movlw	0
   610   000910  6E43               	movwf	(atraso_ms@valor+1)^0,c
   611   000912  0E01               	movlw	1
   612   000914  6E42               	movwf	atraso_ms@valor^0,c
   613   000916  ECC8  F004         	call	_atraso_ms	;wreg free
   614                           
   615                           ;lcd.c: 68:  lcd_cmd(0x38);
   616   00091A  0E38               	movlw	56
   617   00091C  EC01  F005         	call	_lcd_cmd
   618                           
   619                           ;lcd.c: 69:  lcd_cmd(0x08);
   620   000920  0E08               	movlw	8
   621   000922  EC01  F005         	call	_lcd_cmd
   622                           
   623                           ;lcd.c: 70:  lcd_cmd(0x0F);
   624   000926  0E0F               	movlw	15
   625   000928  EC01  F005         	call	_lcd_cmd
   626                           
   627                           ;lcd.c: 71:  lcd_cmd(0x01);
   628   00092C  0E01               	movlw	1
   629   00092E  EC01  F005         	call	_lcd_cmd
   630                           
   631                           ;lcd.c: 72:  lcd_cmd(0x38);
   632   000932  0E38               	movlw	56
   633   000934  EC01  F005         	call	_lcd_cmd
   634                           
   635                           ;lcd.c: 73:         lcd_cmd(0x80);
   636   000938  0E80               	movlw	128
   637   00093A  EC01  F005         	call	_lcd_cmd
   638   00093E  0012               	return		;funcret
   639   000940                     __end_of_lcd_init:
   640                           	callstack 0
   641                           
   642 ;; *************** function _lcd_cmd *****************
   643 ;; Defined at:
   644 ;;		line 35 in file "lcd.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  val             1    wreg     unsigned char 
   647 ;; Auto vars:     Size  Location     Type
   648 ;;  val             1    5[COMRAM] unsigned char 
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   658 ;;      Params:         0       0       0       0       0       0       0       0       0
   659 ;;      Locals:         1       0       0       0       0       0       0       0       0
   660 ;;      Temps:          0       0       0       0       0       0       0       0       0
   661 ;;      Totals:         1       0       0       0       0       0       0       0       0
   662 ;;Total ram usage:        1 bytes
   663 ;; Hardware stack levels used: 1
   664 ;; Hardware stack levels required when called: 1
   665 ;; This function calls:
   666 ;;		_atraso_ms
   667 ;;		_lcd_wr
   668 ;; This function is called by:
   669 ;;		_lcd_init
   670 ;;		_main
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           	psect	text4
   675   000A02                     __ptext4:
   676                           	callstack 0
   677   000A02                     _lcd_cmd:
   678                           	callstack 28
   679                           
   680                           ;incstack = 0
   681                           ;lcd_cmd@val stored from wreg
   682   000A02  6E47               	movwf	lcd_cmd@val^0,c
   683   000A04                     
   684                           ;lcd.c: 35: void lcd_cmd(unsigned char val);lcd.c: 36: {;lcd.c: 37:  PORTEbits.RE1=1;
   685   000A04  8284               	bsf	132,1,c	;volatile
   686   000A06                     
   687                           ;lcd.c: 38:         lcd_wr(val);
   688   000A06  5047               	movf	lcd_cmd@val^0,w,c
   689   000A08  EC38  F005         	call	_lcd_wr
   690   000A0C                     
   691                           ;lcd.c: 39:         PORTEbits.RE0=0;
   692   000A0C  9084               	bcf	132,0,c	;volatile
   693   000A0E                     
   694                           ;lcd.c: 40:         atraso_ms(3);
   695   000A0E  0E00               	movlw	0
   696   000A10  6E43               	movwf	(atraso_ms@valor+1)^0,c
   697   000A12  0E03               	movlw	3
   698   000A14  6E42               	movwf	atraso_ms@valor^0,c
   699   000A16  ECC8  F004         	call	_atraso_ms	;wreg free
   700   000A1A                     
   701                           ;lcd.c: 41:         PORTEbits.RE1=0;
   702   000A1A  9284               	bcf	132,1,c	;volatile
   703   000A1C                     
   704                           ;lcd.c: 42:         atraso_ms(3);
   705   000A1C  0E00               	movlw	0
   706   000A1E  6E43               	movwf	(atraso_ms@valor+1)^0,c
   707   000A20  0E03               	movlw	3
   708   000A22  6E42               	movwf	atraso_ms@valor^0,c
   709   000A24  ECC8  F004         	call	_atraso_ms	;wreg free
   710   000A28                     
   711                           ;lcd.c: 43:  PORTEbits.RE1=1;
   712   000A28  8284               	bsf	132,1,c	;volatile
   713   000A2A  0012               	return		;funcret
   714   000A2C                     __end_of_lcd_cmd:
   715                           	callstack 0
   716                           
   717 ;; *************** function _lcd_wr *****************
   718 ;; Defined at:
   719 ;;		line 30 in file "lcd.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  val             1    wreg     unsigned char 
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  val             1    0[COMRAM] unsigned char 
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   733 ;;      Params:         0       0       0       0       0       0       0       0       0
   734 ;;      Locals:         1       0       0       0       0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0       0       0       0       0
   736 ;;      Totals:         1       0       0       0       0       0       0       0       0
   737 ;;Total ram usage:        1 bytes
   738 ;; Hardware stack levels used: 1
   739 ;; This function calls:
   740 ;;		Nothing
   741 ;; This function is called by:
   742 ;;		_lcd_cmd
   743 ;;		_lcd_dat
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text5
   748   000A70                     __ptext5:
   749                           	callstack 0
   750   000A70                     _lcd_wr:
   751                           	callstack 28
   752                           
   753                           ;incstack = 0
   754                           ;lcd_wr@val stored from wreg
   755   000A70  6E42               	movwf	lcd_wr@val^0,c
   756   000A72                     
   757                           ;lcd.c: 30: void lcd_wr(unsigned char val);lcd.c: 31: {;lcd.c: 32:   PORTD=val;
   758   000A72  C042  FF83         	movff	lcd_wr@val,3971	;volatile
   759   000A76  0012               	return		;funcret
   760   000A78                     __end_of_lcd_wr:
   761                           	callstack 0
   762                           
   763 ;; *************** function _atraso_ms *****************
   764 ;; Defined at:
   765 ;;		line 26 in file "atraso.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;  valor           2    0[COMRAM] unsigned int 
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  i               2    2[COMRAM] unsigned int 
   770 ;;  j               1    4[COMRAM] unsigned char 
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   780 ;;      Params:         2       0       0       0       0       0       0       0       0
   781 ;;      Locals:         3       0       0       0       0       0       0       0       0
   782 ;;      Temps:          0       0       0       0       0       0       0       0       0
   783 ;;      Totals:         5       0       0       0       0       0       0       0       0
   784 ;;Total ram usage:        5 bytes
   785 ;; Hardware stack levels used: 1
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		_lcd_cmd
   790 ;;		_lcd_dat
   791 ;;		_lcd_init
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text6
   796   000990                     __ptext6:
   797                           	callstack 0
   798   000990                     _atraso_ms:
   799                           	callstack 28
   800   000990                     
   801                           ;atraso.c: 26: void atraso_ms(unsigned int valor);atraso.c: 27: {;atraso.c: 28: unsigned
      +                           int i;;atraso.c: 29: unsigned char j;;atraso.c: 31:  for (i =0; i< valor; i++)
   802   000990  0E00               	movlw	0
   803   000992  6E45               	movwf	(atraso_ms@i+1)^0,c
   804   000994  0E00               	movlw	0
   805   000996  6E44               	movwf	atraso_ms@i^0,c
   806   000998  EFE0  F004         	goto	l920
   807   00099C                     l908:
   808                           
   809                           ;atraso.c: 32:  {;atraso.c: 34:   for (j =0 ; j < 200; j++)
   810   00099C  0E00               	movlw	0
   811   00099E  6E46               	movwf	atraso_ms@j^0,c
   812   0009A0                     l5:
   813   0009A0  F000               	nop		;# 
   814   0009A2  F000               	nop		;# 
   815   0009A4  F000               	nop		;# 
   816   0009A6  F000               	nop		;# 
   817   0009A8  F000               	nop		;# 
   818   0009AA                     
   819                           ;atraso.c: 41:    }
   820   0009AA  2A46               	incf	atraso_ms@j^0,f,c
   821   0009AC  0EC7               	movlw	199
   822   0009AE  6446               	cpfsgt	atraso_ms@j^0,c
   823   0009B0  EFDC  F004         	goto	u71
   824   0009B4  EFDE  F004         	goto	u70
   825   0009B8                     u71:
   826   0009B8  EFD0  F004         	goto	l5
   827   0009BC                     u70:
   828   0009BC                     
   829                           ;atraso.c: 42:  }
   830   0009BC  4A44               	infsnz	atraso_ms@i^0,f,c
   831   0009BE  2A45               	incf	(atraso_ms@i+1)^0,f,c
   832   0009C0                     l920:
   833   0009C0  5042               	movf	atraso_ms@valor^0,w,c
   834   0009C2  5C44               	subwf	atraso_ms@i^0,w,c
   835   0009C4  5043               	movf	(atraso_ms@valor+1)^0,w,c
   836   0009C6  5845               	subwfb	(atraso_ms@i+1)^0,w,c
   837   0009C8  A0D8               	btfss	status,0,c
   838   0009CA  EFE9  F004         	goto	u81
   839   0009CE  EFEB  F004         	goto	u80
   840   0009D2                     u81:
   841   0009D2  EFCE  F004         	goto	l908
   842   0009D6                     u80:
   843   0009D6  0012               	return		;funcret
   844   0009D8                     __end_of_atraso_ms:
   845                           	callstack 0
   846                           
   847 ;; *************** function _exit *****************
   848 ;; Defined at:
   849 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\exit.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  code            2    2[COMRAM] int 
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		wreg, status,2, status,0, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   863 ;;      Params:         2       0       0       0       0       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0       0       0       0       0
   865 ;;      Temps:          0       0       0       0       0       0       0       0       0
   866 ;;      Totals:         2       0       0       0       0       0       0       0       0
   867 ;;Total ram usage:        2 bytes
   868 ;; Hardware stack levels used: 1
   869 ;; Hardware stack levels required when called: 1
   870 ;; This function calls:
   871 ;;		__Exit
   872 ;;		___funcs_on_exit
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text7
   879   000A5E                     __ptext7:
   880                           	callstack 0
   881   000A5E                     _exit:
   882                           	callstack 29
   883   000A5E  EC16  F005         	call	___funcs_on_exit	;wreg free
   884   000A62  C044  F042         	movff	exit@code,__Exit@ec
   885   000A66  C045  F043         	movff	exit@code+1,__Exit@ec+1
   886   000A6A  EC3C  F005         	call	__Exit	;wreg free
   887   000A6E  0012               	return		;funcret
   888   000A70                     __end_of_exit:
   889                           	callstack 0
   890                           
   891 ;; *************** function ___funcs_on_exit *****************
   892 ;; Defined at:
   893 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atexit.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;  func            2    0        PTR FTN()void 
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, status,2, status,0
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   907 ;;      Params:         0       0       0       0       0       0       0       0       0
   908 ;;      Locals:         0       0       0       0       0       0       0       0       0
   909 ;;      Temps:          0       0       0       0       0       0       0       0       0
   910 ;;      Totals:         0       0       0       0       0       0       0       0       0
   911 ;;Total ram usage:        0 bytes
   912 ;; Hardware stack levels used: 1
   913 ;; This function calls:
   914 ;;		Nothing
   915 ;; This function is called by:
   916 ;;		_exit
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text8
   921   000A2C                     __ptext8:
   922                           	callstack 0
   923   000A2C                     ___funcs_on_exit:
   924                           	callstack 29
   925   000A2C  EF19  F005         	goto	l836
   926   000A30                     l834:
   927   000A30  0641               	decf	_count^0,f,c
   928   000A32                     l836:
   929   000A32  5041               	movf	_count^0,w,c
   930   000A34  0A80               	xorlw	128
   931   000A36  0F7F               	addlw	-129
   932   000A38  B0D8               	btfsc	status,0,c
   933   000A3A  EF21  F005         	goto	u31
   934   000A3E  EF23  F005         	goto	u30
   935   000A42                     u31:
   936   000A42  EF18  F005         	goto	l834
   937   000A46                     u30:
   938   000A46  0012               	return		;funcret
   939   000A48                     __end_of___funcs_on_exit:
   940                           	callstack 0
   941                           
   942 ;; *************** function __Exit *****************
   943 ;; Defined at:
   944 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\_Exit.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  ec              2    0[COMRAM] int 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		None
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   958 ;;      Params:         2       0       0       0       0       0       0       0       0
   959 ;;      Locals:         0       0       0       0       0       0       0       0       0
   960 ;;      Temps:          0       0       0       0       0       0       0       0       0
   961 ;;      Totals:         2       0       0       0       0       0       0       0       0
   962 ;;Total ram usage:        2 bytes
   963 ;; Hardware stack levels used: 1
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_exit
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text9
   972   000A78                     __ptext9:
   973                           	callstack 0
   974   000A78                     __Exit:
   975                           	callstack 29
   976   000A78                     l768:
   977   000A78  EF3C  F005         	goto	l768
   978   000A7C  0012               	return		;funcret
   979   000A7E                     __end_of__Exit:
   980                           	callstack 0
   981                           
   982                           	psect	rparam
   983   000000                     
   984                           	psect	idloc
   985                           
   986                           ;Config register IDLOC0 @ 0x200000
   987                           ;	unspecified, using default values
   988   200000                     	org	2097152
   989   200000  FF                 	db	255
   990                           
   991                           ;Config register IDLOC1 @ 0x200001
   992                           ;	unspecified, using default values
   993   200001                     	org	2097153
   994   200001  FF                 	db	255
   995                           
   996                           ;Config register IDLOC2 @ 0x200002
   997                           ;	unspecified, using default values
   998   200002                     	org	2097154
   999   200002  FF                 	db	255
  1000                           
  1001                           ;Config register IDLOC3 @ 0x200003
  1002                           ;	unspecified, using default values
  1003   200003                     	org	2097155
  1004   200003  FF                 	db	255
  1005                           
  1006                           ;Config register IDLOC4 @ 0x200004
  1007                           ;	unspecified, using default values
  1008   200004                     	org	2097156
  1009   200004  FF                 	db	255
  1010                           
  1011                           ;Config register IDLOC5 @ 0x200005
  1012                           ;	unspecified, using default values
  1013   200005                     	org	2097157
  1014   200005  FF                 	db	255
  1015                           
  1016                           ;Config register IDLOC6 @ 0x200006
  1017                           ;	unspecified, using default values
  1018   200006                     	org	2097158
  1019   200006  FF                 	db	255
  1020                           
  1021                           ;Config register IDLOC7 @ 0x200007
  1022                           ;	unspecified, using default values
  1023   200007                     	org	2097159
  1024   200007  FF                 	db	255
  1025                           
  1026                           	psect	config
  1027                           
  1028                           ;Config register CONFIG1L @ 0x300000
  1029                           ;	PLL Prescaler Selection bits
  1030                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  1031                           ;	System Clock Postscaler Selection bits
  1032                           ;	CPUDIV = OSC2_PLL3, [Primary Oscillator Src: /2][96 MHz PLL Src: /3]
  1033                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1034                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  1035   300000                     	org	3145728
  1036   300000  29                 	db	41
  1037                           
  1038                           ;Config register CONFIG1H @ 0x300001
  1039                           ;	Oscillator Selection bits
  1040                           ;	FOSC = HS, HS oscillator (HS)
  1041                           ;	Fail-Safe Clock Monitor Enable bit
  1042                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1043                           ;	Internal/External Oscillator Switchover bit
  1044                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1045   300001                     	org	3145729
  1046   300001  0C                 	db	12
  1047                           
  1048                           ;Config register CONFIG2L @ 0x300002
  1049                           ;	Power-up Timer Enable bit
  1050                           ;	PWRT = ON, PWRT enabled
  1051                           ;	Brown-out Reset Enable bits
  1052                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1053                           ;	Brown-out Reset Voltage bits
  1054                           ;	BORV = 3, Minimum setting 2.05V
  1055                           ;	USB Voltage Regulator Enable bit
  1056                           ;	VREGEN = OFF, USB voltage regulator disabled
  1057   300002                     	org	3145730
  1058   300002  18                 	db	24
  1059                           
  1060                           ;Config register CONFIG2H @ 0x300003
  1061                           ;	Watchdog Timer Enable bit
  1062                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1063                           ;	Watchdog Timer Postscale Select bits
  1064                           ;	WDTPS = 32768, 1:32768
  1065   300003                     	org	3145731
  1066   300003  1E                 	db	30
  1067                           
  1068                           ; Padding undefined space
  1069   300004                     	org	3145732
  1070   300004  FF                 	db	255
  1071                           
  1072                           ;Config register CONFIG3H @ 0x300005
  1073                           ;	CCP2 MUX bit
  1074                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1075                           ;	PORTB A/D Enable bit
  1076                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1077                           ;	Low-Power Timer 1 Oscillator Enable bit
  1078                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1079                           ;	MCLR Pin Enable bit
  1080                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1081   300005                     	org	3145733
  1082   300005  81                 	db	129
  1083                           
  1084                           ;Config register CONFIG4L @ 0x300006
  1085                           ;	Stack Full/Underflow Reset Enable bit
  1086                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1087                           ;	Single-Supply ICSP Enable bit
  1088                           ;	LVP = OFF, Single-Supply ICSP disabled
  1089                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1090                           ;	ICPRT = OFF, ICPORT disabled
  1091                           ;	Extended Instruction Set Enable bit
  1092                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1093                           ;	Background Debugger Enable bit
  1094                           ;	DEBUG = 0x1, unprogrammed default
  1095   300006                     	org	3145734
  1096   300006  80                 	db	128
  1097                           
  1098                           ; Padding undefined space
  1099   300007                     	org	3145735
  1100   300007  FF                 	db	255
  1101                           
  1102                           ;Config register CONFIG5L @ 0x300008
  1103                           ;	Code Protection bit
  1104                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1105                           ;	Code Protection bit
  1106                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1107                           ;	Code Protection bit
  1108                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1109                           ;	Code Protection bit
  1110                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1111   300008                     	org	3145736
  1112   300008  0F                 	db	15
  1113                           
  1114                           ;Config register CONFIG5H @ 0x300009
  1115                           ;	Boot Block Code Protection bit
  1116                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1117                           ;	Data EEPROM Code Protection bit
  1118                           ;	CPD = OFF, Data EEPROM is not code-protected
  1119   300009                     	org	3145737
  1120   300009  C0                 	db	192
  1121                           
  1122                           ;Config register CONFIG6L @ 0x30000A
  1123                           ;	Write Protection bit
  1124                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1125                           ;	Write Protection bit
  1126                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1127                           ;	Write Protection bit
  1128                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1129                           ;	Write Protection bit
  1130                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1131   30000A                     	org	3145738
  1132   30000A  0F                 	db	15
  1133                           
  1134                           ;Config register CONFIG6H @ 0x30000B
  1135                           ;	Configuration Register Write Protection bit
  1136                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1137                           ;	Boot Block Write Protection bit
  1138                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1139                           ;	Data EEPROM Write Protection bit
  1140                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1141   30000B                     	org	3145739
  1142   30000B  E0                 	db	224
  1143                           
  1144                           ;Config register CONFIG7L @ 0x30000C
  1145                           ;	Table Read Protection bit
  1146                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1147                           ;	Table Read Protection bit
  1148                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1149                           ;	Table Read Protection bit
  1150                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1151                           ;	Table Read Protection bit
  1152                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1153   30000C                     	org	3145740
  1154   30000C  0F                 	db	15
  1155                           
  1156                           ;Config register CONFIG7H @ 0x30000D
  1157                           ;	Boot Block Table Read Protection bit
  1158                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1159   30000D                     	org	3145741
  1160   30000D  40                 	db	64
  1161                           tosu	equ	0xFFF
  1162                           tosh	equ	0xFFE
  1163                           tosl	equ	0xFFD
  1164                           stkptr	equ	0xFFC
  1165                           pclatu	equ	0xFFB
  1166                           pclath	equ	0xFFA
  1167                           pcl	equ	0xFF9
  1168                           tblptru	equ	0xFF8
  1169                           tblptrh	equ	0xFF7
  1170                           tblptrl	equ	0xFF6
  1171                           tablat	equ	0xFF5
  1172                           prodh	equ	0xFF4
  1173                           prodl	equ	0xFF3
  1174                           indf0	equ	0xFEF
  1175                           postinc0	equ	0xFEE
  1176                           postdec0	equ	0xFED
  1177                           preinc0	equ	0xFEC
  1178                           plusw0	equ	0xFEB
  1179                           fsr0h	equ	0xFEA
  1180                           fsr0l	equ	0xFE9
  1181                           wreg	equ	0xFE8
  1182                           indf1	equ	0xFE7
  1183                           postinc1	equ	0xFE6
  1184                           postdec1	equ	0xFE5
  1185                           preinc1	equ	0xFE4
  1186                           plusw1	equ	0xFE3
  1187                           fsr1h	equ	0xFE2
  1188                           fsr1l	equ	0xFE1
  1189                           bsr	equ	0xFE0
  1190                           indf2	equ	0xFDF
  1191                           postinc2	equ	0xFDE
  1192                           postdec2	equ	0xFDD
  1193                           preinc2	equ	0xFDC
  1194                           plusw2	equ	0xFDB
  1195                           fsr2h	equ	0xFDA
  1196                           fsr2l	equ	0xFD9
  1197                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        0
    BSS         65
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      82
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    funcs	PTR FTN()void [32] size(2) Largest target is 0

    __funcs_on_exit@func	PTR FTN()void  size(2) Largest target is 0

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[14]), STR_2(CODE[12]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_lcd_str
    _lcd_str->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_init->_lcd_cmd
    _lcd_cmd->_atraso_ms
    _exit->__Exit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    3320
                                             11 COMRAM     6     6      0
                               _exit
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2    1131
                                              6 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0     661
                                              5 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    1285
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0     661
                                              5 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            5     3      2     624
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _exit                                                 2     0      2     174
                                              2 COMRAM     2     0      2
                              __Exit
                    ___funcs_on_exit
 ---------------------------------------------------------------------------------
 (2) ___funcs_on_exit                                      2     2      0       0
 ---------------------------------------------------------------------------------
 (2) __Exit                                                2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _exit
     __Exit
     ___funcs_on_exit
   _lcd_cmd
     _atraso_ms
     _lcd_wr
   _lcd_init
     _atraso_ms
     _lcd_cmd
   _lcd_str
     _lcd_dat
       _atraso_ms
       _lcd_wr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBIGSFRhh         69      0       0      21        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     11      52       1       86.3%
BITBIGSFRll         21      0       0      25        0.0%
BITBIGSFRhll         E      0       0      23        0.0%
BITBIGSFRlh          1      0       0      24        0.0%
BITBIGSFRhlh         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      52       3        0.0%
DATA                 0      0      52       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Nov 09 09:44:22 2022

                      l5 09A0                        l8 09D6                       l42 0A76  
                     l51 093E                       l45 0A2A                       l48 0A00  
                     l57 098E                       u30 0A46                       u31 0A42  
                     u70 09BC                       u71 09B8                       u80 09D6  
                     u81 09D2                       u90 098E                       u91 098A  
                    l802 0A72                      l832 0A2C                      l920 09C0  
                    l834 0A30                      l914 09AA                      l906 0990  
                    l930 0A1A                      l922 0A04                      l780 0A46  
                    l836 0A32                      l916 09AC                      l908 099C  
                    l932 0A1C                      l924 0A06                      l940 09E2  
                    l765 0A6E                      l918 09BC                      l934 0A28  
                    l926 0A0C                      l950 08E4                      l942 09E4  
                    l768 0A78                      l928 0A0E                      l952 08E8  
                    l944 09F0                      l936 09DA                      l960 0964  
                    l954 08F4                      l946 09F2                      l938 09DC  
                    l962 0966                      l970 0830                      l964 0A5E  
                    l948 09FE                      l956 0940                      l980 0854  
                    l972 0832                      l966 0A62                      l958 0948  
                    l990 0884                      l982 0868                      l974 083C  
                    l992 088A                      l984 086C                      l976 0840  
                    l968 0824                      l994 0896                      l986 0872  
                    l978 0846                      l996 089C                      l988 0878  
                    l998 08A8                      u100 0854                      u101 0850  
                    u110 0868                      u111 0864                      wreg 000FE8  
                   l1000 08AE                     l1002 08BE                     l1004 08C4  
                   l1006 08D0                     STR_1 081B                     STR_2 080F  
                   STR_3 0801                     _main 0824                     _exit 0A5E  
                   start 0000             ___param_bank 000000                    ?_main 0042  
                  ?_exit 0044                    _PORTD 000F83                    _TRISB 000F93  
                  _TRISD 000F95                    _TRISE 000F96                    __Exit 0A78  
        __end_of_lcd_dat 0A02          __end_of_lcd_cmd 0A2C          __end_of_lcd_str 0990  
                  _count 0041                    _funcs 0001                    tablat 000FF5  
                  status 000FD8          __initialization 0A48             __end_of_main 08E4  
           __end_of_exit 0A70                   ??_main 004D                   ??_exit 0046  
          __activetblptr 000002                   ?__Exit 0042         __end_of_lcd_init 0940  
                 _lcd_wr 0A70                   clear_0 0A4E                   isa$std 000001  
              ??_lcd_dat 0047                ??_lcd_cmd 0047                ??_lcd_str 004A  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0A54  
          ___rparam_used 000001           __pcstackCOMRAM 0042            __end_of__Exit 0A7E  
      ??___funcs_on_exit 0042                  ??__Exit 0044                  ?_lcd_wr 0042  
              ?_lcd_init 0042                  __Hparam 0000                  __Lparam 0000  
      __end_of_atraso_ms 09D8             __psmallconst 0800                  __pcinit 0A48  
                __ramtop 0800                  __ptext0 0824                  __ptext1 0940  
                __ptext2 09D8                  __ptext3 08E4                  __ptext4 0A02  
                __ptext5 0A70                  __ptext6 0990                  __ptext7 0A5E  
                __ptext8 0A2C                  __ptext9 0A78                  _lcd_dat 09D8  
                _lcd_cmd 0A02                  _lcd_str 0940               ??_lcd_init 0048  
   end_of_initialization 0A54            __Lmediumconst 0000                  postinc0 000FEE  
              _PORTBbits 000F81                _PORTEbits 000F84           main@visitante_ 004F  
             lcd_dat@val 0047               lcd_cmd@val 0047               lcd_str@str 0048  
        ___funcs_on_exit 0A2C               atraso_ms@i 0044               atraso_ms@j 0046  
         __end_of_lcd_wr 0A78      start_initialization 0A48                 ??_lcd_wr 0042  
            __pbssCOMRAM 0001  __end_of___funcs_on_exit 0A48                 ?_lcd_dat 0042  
               ?_lcd_cmd 0042                 ?_lcd_str 0048                _atraso_ms 0990  
            __smallconst 0800           atraso_ms@valor 0042               ?_atraso_ms 0042  
              main@casa_ 004D                lcd_wr@val 0042         ?___funcs_on_exit 0042  
               __Exit@ec 0042                 __Hrparam 0000                 __Lrparam 0000  
               _lcd_init 08E4                 isa$xinst 000000                 main@casa 0051  
               lcd_str@i 004C              ??_atraso_ms 0044                 exit@code 0044  
